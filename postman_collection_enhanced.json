{
  "info": {
    "name": "Pantheon Template Service - Enhanced Guard API",
    "description": "Enhanced API collection for Pantheon Template Service with multi-guard authentication, role-based access control, and advanced security features. Supports superadmin, admin, vendor, and user guards with enhanced security settings.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "2.0.0"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{auth_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://127.0.0.1:8000",
      "type": "string"
    },
    {
      "key": "auth_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "superadmin_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "admin_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "vendor_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_token",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health & System",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/health",
              "host": ["{{base_url}}"],
              "path": ["api", "health"]
            }
          }
        },
        {
          "name": "V1 Health Check",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/health",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "health"]
            }
          }
        },
        {
          "name": "System Status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/system/status",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "system", "status"]
            }
          }
        }
      ]
    },
    {
      "name": "Enhanced Guard Authentication",
      "item": [
        {
          "name": "Login as Superadmin (API)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"login\": \"superadmin@pantheon.com\",\n  \"password\": \"password\",\n  \"remember_me\": false\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/login/api_superadmin",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "login", "api_superadmin"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.token) {",
                  "        pm.collectionVariables.set('auth_token', response.data.token);",
                  "        pm.collectionVariables.set('superadmin_token', response.data.token);",
                  "        console.log('Superadmin token saved:', response.data.token);",
                  "        console.log('Available guards:', response.data.available_guards);",
                  "        console.log('Security info:', response.data.security_info);",
                  "        ",
                  "        // Test security features",
                  "        pm.test('Superadmin login successful', function () {",
                  "            pm.expect(response.success).to.be.true;",
                  "            pm.expect(response.data.guard).to.equal('api_superadmin');",
                  "            pm.expect(response.data.security_info.requires_2fa).to.be.true;",
                  "            pm.expect(response.data.security_info.max_tokens).to.equal(3);",
                  "        });",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Login as Admin (API)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"login\": \"admin@pantheon.com\",\n  \"password\": \"password\",\n  \"remember_me\": false\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/login/api_admin",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "login", "api_admin"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.token) {",
                  "        pm.collectionVariables.set('auth_token', response.data.token);",
                  "        pm.collectionVariables.set('admin_token', response.data.token);",
                  "        console.log('Admin token saved:', response.data.token);",
                  "        console.log('Available guards:', response.data.available_guards);",
                  "        ",
                  "        // Test admin features",
                  "        pm.test('Admin login successful', function () {",
                  "            pm.expect(response.success).to.be.true;",
                  "            pm.expect(response.data.guard).to.equal('api_admin');",
                  "            pm.expect(response.data.security_info.requires_2fa).to.be.true;",
                  "            pm.expect(response.data.security_info.max_tokens).to.equal(5);",
                  "        });",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Login as Vendor (API)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"login\": \"vendor@pantheon.com\",\n  \"password\": \"password\",\n  \"remember_me\": false\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/login/api_vendor",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "login", "api_vendor"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.token) {",
                  "        pm.collectionVariables.set('auth_token', response.data.token);",
                  "        pm.collectionVariables.set('vendor_token', response.data.token);",
                  "        console.log('Vendor token saved:', response.data.token);",
                  "        console.log('Available guards:', response.data.available_guards);",
                  "        ",
                  "        // Test vendor features",
                  "        pm.test('Vendor login successful', function () {",
                  "            pm.expect(response.success).to.be.true;",
                  "            pm.expect(response.data.guard).to.equal('api_vendor');",
                  "            pm.expect(response.data.security_info.requires_2fa).to.be.false;",
                  "            pm.expect(response.data.security_info.max_tokens).to.equal(20);",
                  "        });",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Login as User (API)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"login\": \"user@pantheon.com\",\n  \"password\": \"password\",\n  \"remember_me\": false\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/login/api",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "login", "api"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.token) {",
                  "        pm.collectionVariables.set('auth_token', response.data.token);",
                  "        pm.collectionVariables.set('user_token', response.data.token);",
                  "        console.log('User token saved:', response.data.token);",
                  "        console.log('Available guards:', response.data.available_guards);",
                  "        ",
                  "        // Test user features",
                  "        pm.test('User login successful', function () {",
                  "            pm.expect(response.success).to.be.true;",
                  "            pm.expect(response.data.guard).to.equal('api');",
                  "            pm.expect(response.data.security_info.requires_2fa).to.be.false;",
                  "            pm.expect(response.data.security_info.max_tokens).to.equal(10);",
                  "        });",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Test Guard Access Denied",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"login\": \"user@pantheon.com\",\n  \"password\": \"password\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/login/api_admin",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "login", "api_admin"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Should return access denied for user trying admin guard', function () {",
                  "    pm.expect(pm.response.code).to.equal(403);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.false;",
                  "    pm.expect(response.error.message).to.include('Access denied');",
                  "    pm.expect(response.error.details.available_guards).to.include('web');",
                  "    pm.expect(response.error.details.available_guards).to.include('api');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Test Superadmin Guard Access",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"login\": \"admin@pantheon.com\",\n  \"password\": \"password\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/login/api_superadmin",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "login", "api_superadmin"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Should return access denied for admin trying superadmin guard', function () {",
                  "    pm.expect(pm.response.code).to.equal(403);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.false;",
                  "    pm.expect(response.error.message).to.include('Access denied');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Guard Management",
      "item": [
        {
          "name": "Get Available Guards",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/auth/guards",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "guards"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.test('Should return available guards', function () {",
                  "        pm.expect(response.success).to.be.true;",
                  "        pm.expect(response.data.available_guards).to.be.an('array');",
                  "        pm.expect(response.data.guard_info).to.be.an('object');",
                  "        console.log('Current guard:', response.data.current_guard);",
                  "        console.log('Available guards:', response.data.available_guards);",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Switch Guard",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"guard\": \"api_admin\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/switch-guard",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "switch-guard"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.test('Should switch guard successfully', function () {",
                  "        pm.expect(response.success).to.be.true;",
                  "        pm.expect(response.data.current_guard).to.equal('api_admin');",
                  "        console.log('Guard switched to:', response.data.current_guard);",
                  "    });",
                  "} else {",
                  "    console.log('Guard switch failed:', pm.response.text);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Guard Statistics (Superadmin Only)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{superadmin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/auth/guard-statistics",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "guard-statistics"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.test('Should return guard statistics', function () {",
                  "        pm.expect(response.success).to.be.true;",
                  "        pm.expect(response.data).to.be.an('object');",
                  "        console.log('Guard statistics:', JSON.stringify(response.data, null, 2));",
                  "    });",
                  "} else {",
                  "    console.log('Guard statistics failed:', pm.response.text);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "User Management",
      "item": [
        {
          "name": "Get User Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/auth/me",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "me"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.test('Should return user profile', function () {",
                  "        pm.expect(response.success).to.be.true;",
                  "        pm.expect(response.data.user).to.be.an('object');",
                  "        pm.expect(response.data.user.roles).to.be.an('array');",
                  "        pm.expect(response.data.user.permissions).to.be.an('array');",
                  "        console.log('User profile:', response.data.user);",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Login History",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/auth/login-history?days=7&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "login-history"],
              "query": [
                {
                  "key": "days",
                  "value": "7"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.test('Should return login history', function () {",
                  "        pm.expect(response.success).to.be.true;",
                  "        pm.expect(response.data.login_history).to.be.an('array');",
                  "        pm.expect(response.data.statistics).to.be.an('object');",
                  "        console.log('Login history:', response.data.login_history.length, 'records');",
                  "        console.log('Statistics:', response.data.statistics);",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Login Statistics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/auth/login-statistics?days=30",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "login-statistics"],
              "query": [
                {
                  "key": "days",
                  "value": "30"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.test('Should return login statistics', function () {",
                  "        pm.expect(response.success).to.be.true;",
                  "        pm.expect(response.data).to.be.an('object');",
                  "        pm.expect(response.data.total_logins).to.be.a('number');",
                  "        console.log('Login statistics:', response.data);",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Admin Functions",
      "item": [
        {
          "name": "Admin Dashboard",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/admin/dashboard",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "admin", "dashboard"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Should access admin dashboard', function () {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get API Logs (Superadmin Only)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{superadmin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/admin/api-logs?per_page=10",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "admin", "api-logs"],
              "query": [
                {
                  "key": "per_page",
                  "value": "10"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.test('Should return API logs', function () {",
                  "        pm.expect(response.success).to.be.true;",
                  "        pm.expect(response.data).to.be.an('object');",
                  "        console.log('API logs retrieved successfully');",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get API Statistics (Superadmin Only)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{superadmin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/admin/api-logs/statistics",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "admin", "api-logs", "statistics"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.test('Should return API statistics', function () {",
                  "        pm.expect(response.success).to.be.true;",
                  "        pm.expect(response.data).to.be.an('object');",
                  "        console.log('API statistics:', response.data);",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Security Testing",
      "item": [
        {
          "name": "Test Rate Limiting",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"login\": \"test@example.com\",\n  \"password\": \"wrongpassword\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/login/api",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "login", "api"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// This request should fail, testing rate limiting",
                  "pm.test('Should handle invalid login gracefully', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([401, 429]);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Test Token Validation",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer invalid_token_12345"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/auth/me",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "me"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Should reject invalid token', function () {",
                  "    pm.expect(pm.response.code).to.equal(401);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.false;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Test Unauthorized Access",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/auth/me",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "me"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Should require authentication', function () {",
                  "    pm.expect(pm.response.code).to.equal(401);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.false;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Logout",
      "item": [
        {
          "name": "Logout User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "logout"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.test('Should logout successfully', function () {",
                  "        pm.expect(response.success).to.be.true;",
                  "        pm.collectionVariables.set('auth_token', '');",
                  "        console.log('User logged out successfully');",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "External API Integration",
      "item": [
        {
          "name": "Get Products",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/external/products?merchant_id=1&category=travel&search=umrah",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "external", "products"],
              "query": [
                {
                  "key": "merchant_id",
                  "value": "1",
                  "description": "Merchant ID to get products for"
                },
                {
                  "key": "category",
                  "value": "travel",
                  "description": "Product category filter"
                },
                {
                  "key": "search",
                  "value": "umrah",
                  "description": "Search term for products"
                }
              ]
            }
          }
        },
        {
          "name": "Get Packages",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/external/packages?merchant_id=1&type=umrah&price_min=1000&price_max=5000",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "external", "packages"],
              "query": [
                {
                  "key": "merchant_id",
                  "value": "1",
                  "description": "Merchant ID to get packages for"
                },
                {
                  "key": "type",
                  "value": "umrah",
                  "description": "Package type filter (umrah, hajj, qurban)"
                },
                {
                  "key": "price_min",
                  "value": "1000",
                  "description": "Minimum price filter"
                },
                {
                  "key": "price_max",
                  "value": "5000",
                  "description": "Maximum price filter"
                }
              ]
            }
          }
        },
        {
          "name": "Get Insurance",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/external/insurance?merchant_id=1&package_id=PKG_UMRAH_001",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "external", "insurance"],
              "query": [
                {
                  "key": "merchant_id",
                  "value": "1",
                  "description": "Merchant ID to get insurance for"
                },
                {
                  "key": "package_id",
                  "value": "PKG_UMRAH_001",
                  "description": "Package ID to get insurance for"
                }
              ]
            }
          }
        },
        {
          "name": "Get Resources",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/external/resources?merchant_id=1&resource_type=images",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "external", "resources"],
              "query": [
                {
                  "key": "merchant_id",
                  "value": "1",
                  "description": "Merchant ID to get resources for"
                },
                {
                  "key": "resource_type",
                  "value": "images",
                  "description": "Resource type filter (images, documents, videos, guides)"
                }
              ]
            }
          }
        },
        {
          "name": "Get Marketing Materials",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/external/marketing?merchant_id=1&campaign_type=email",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "external", "marketing"],
              "query": [
                {
                  "key": "merchant_id",
                  "value": "1",
                  "description": "Merchant ID to get marketing for"
                },
                {
                  "key": "campaign_type",
                  "value": "email",
                  "description": "Campaign type filter (email, social, banner, brochure)"
                }
              ]
            }
          }
        },
        {
          "name": "Get Promotions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/external/promotions?merchant_id=1&active_only=true",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "external", "promotions"],
              "query": [
                {
                  "key": "merchant_id",
                  "value": "1",
                  "description": "Merchant ID to get promotions for"
                },
                {
                  "key": "active_only",
                  "value": "true",
                  "description": "Show only active promotions"
                }
              ]
            }
          }
        },
        {
          "name": "Get Aggregated Data",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/external/aggregated?merchant_id=1&endpoints=products,packages,insurance&page=1&per_page=20&search=umrah",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "external", "aggregated"],
              "query": [
                {
                  "key": "merchant_id",
                  "value": "1",
                  "description": "Merchant ID to get data for"
                },
                {
                  "key": "endpoints",
                  "value": "products,packages,insurance",
                  "description": "Comma-separated list of endpoints to fetch"
                },
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number for pagination"
                },
                {
                  "key": "per_page",
                  "value": "20",
                  "description": "Number of items per page"
                },
                {
                  "key": "search",
                  "value": "umrah",
                  "description": "Search term across all endpoints"
                }
              ]
            }
          }
        },
        {
          "name": "Get Dashboard Data",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/external/dashboard?merchant_id=1",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "external", "dashboard"],
              "query": [
                {
                  "key": "merchant_id",
                  "value": "1",
                  "description": "Merchant ID to get dashboard data for"
                }
              ]
            }
          }
        },
        {
          "name": "Redirect to Booking",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"merchant_id\": 1,\n  \"package_id\": \"PKG_UMRAH_001\",\n  \"user_id\": 1,\n  \"insurance_id\": \"INS_001\",\n  \"special_requests\": \"Wheelchair accessible\",\n  \"redirect_url\": \"https://merchant.com/booking\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/external/booking/redirect",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "external", "booking", "redirect"]
            }
          }
        }
      ]
    },
    {
      "name": "Webhooks",
      "item": [
        {
          "name": "Booking Callback",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"booking_abc123_1234567890\",\n  \"status\": \"success\",\n  \"booking_id\": \"EXT_BOOKING_123\",\n  \"external_booking_id\": \"MERCHANT_BOOKING_456\",\n  \"amount\": 1500.00,\n  \"currency\": \"USD\",\n  \"payment_reference\": \"PAY_REF_789\",\n  \"booking_details\": {\n    \"package_name\": \"Umrah Package\",\n    \"travel_date\": \"2025-12-01\"\n  },\n  \"customer_info\": {\n    \"name\": \"John Doe\",\n    \"email\": \"john@example.com\",\n    \"phone\": \"+1234567890\"\n  },\n  \"special_requests\": \"Wheelchair accessible\",\n  \"notes\": \"Customer requested early check-in\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/webhooks/booking/callback",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "webhooks", "booking", "callback"]
            }
          }
        },
        {
          "name": "Payment Callback",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"booking_id\": \"EXT_BOOKING_123\",\n  \"payment_status\": \"completed\",\n  \"transaction_id\": \"TXN_789\",\n  \"amount\": 1500.00,\n  \"currency\": \"USD\",\n  \"payment_method\": \"credit_card\",\n  \"gateway_response\": {\n    \"gateway\": \"stripe\",\n    \"charge_id\": \"ch_123\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/webhooks/payment/callback",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "webhooks", "payment", "callback"]
            }
          }
        },
        {
          "name": "Get Webhook Status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/webhooks/status?merchant_id=1",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "webhooks", "status"],
              "query": [
                {
                  "key": "merchant_id",
                  "value": "1",
                  "description": "Merchant ID to get webhook status for"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Module Access Management",
      "item": [
        {
          "name": "Get All Modules",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{superadmin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/admin/modules",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "admin", "modules"]
            }
          }
        },
        {
          "name": "Get User Module Access",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{superadmin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/admin/users/1/module-access",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "admin", "users", "1", "module-access"]
            }
          }
        },
        {
          "name": "Grant Module Access",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{superadmin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"module_id\": \"user_management\",\n  \"permissions\": [\"view users\", \"create users\"],\n  \"grant_all\": false\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/admin/users/1/grant-module-access",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "admin", "users", "1", "grant-module-access"]
            }
          }
        },
        {
          "name": "Revoke Module Access",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{superadmin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"module_id\": \"user_management\",\n  \"permissions\": [\"delete users\"],\n  \"revoke_all\": false\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/admin/users/1/revoke-module-access",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "admin", "users", "1", "revoke-module-access"]
            }
          }
        },
        {
          "name": "Bulk Module Access Update",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{superadmin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"modules\": [\n    {\n      \"module_id\": \"user_management\",\n      \"action\": \"grant\",\n      \"permissions\": [\"view users\", \"create users\"],\n      \"grant_all\": false\n    },\n    {\n      \"module_id\": \"booking_management\",\n      \"action\": \"grant\",\n      \"permissions\": [],\n      \"grant_all\": true\n    },\n    {\n      \"module_id\": \"merchant_management\",\n      \"action\": \"revoke\",\n      \"permissions\": [\"delete merchants\"],\n      \"revoke_all\": false\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/admin/users/1/bulk-module-access",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "admin", "users", "1", "bulk-module-access"]
            }
          }
        }
      ]
    }
  ]
}
