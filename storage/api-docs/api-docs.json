{
    "openapi": "3.0.0",
    "info": {
        "title": "Pantheon Template Service API",
        "description": "A comprehensive API for the Pantheon Template Service with user management, role-based access control, and multi-tenant support.",
        "contact": {
            "email": "support@pantheon-template-service.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://my-default-host.com",
            "description": "Pantheon Template Service API Server"
        }
    ],
    "paths": {
        "/api/v1/admin/dashboard": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get admin dashboard data",
                "operationId": "7e05cf19d18c7f875d448db105c91054",
                "responses": {
                    "200": {
                        "description": "Dashboard data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Dashboard data retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "stats": {
                                                    "properties": {
                                                        "total_users": {
                                                            "type": "integer",
                                                            "example": 150
                                                        },
                                                        "total_merchants": {
                                                            "type": "integer",
                                                            "example": 25
                                                        },
                                                        "total_bookings": {
                                                            "type": "integer",
                                                            "example": 500
                                                        },
                                                        "active_bookings": {
                                                            "type": "integer",
                                                            "example": 45
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "recent_activity": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/logs": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get system logs",
                "operationId": "93f59885b3bc09543fa15d49f6df6e2f",
                "parameters": [
                    {
                        "name": "level",
                        "in": "query",
                        "description": "Log level filter",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "error",
                                "warning",
                                "info",
                                "debug"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Logs retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logs retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/log-stats": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get log statistics",
                "operationId": "29a489b80ee0b556b03c1955578e87ce",
                "responses": {
                    "200": {
                        "description": "Log statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Log statistics retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "total_logs": {
                                                    "type": "integer",
                                                    "example": 1000
                                                },
                                                "error_count": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "warning_count": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "info_count": {
                                                    "type": "integer",
                                                    "example": 800
                                                },
                                                "debug_count": {
                                                    "type": "integer",
                                                    "example": 50
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/cleanup-logs": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Cleanup old logs",
                "operationId": "56b839c5038cb9c6ebd69b255b9c0872",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "days": {
                                        "description": "Number of days to keep logs",
                                        "type": "integer",
                                        "example": 30
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Logs cleaned up successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logs cleaned up successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "deleted_count": {
                                                    "type": "integer",
                                                    "example": 150
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/roles": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get all roles",
                "operationId": "e8f4d5e8fd4c2ee9aa86124928db034a",
                "responses": {
                    "200": {
                        "description": "Roles retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Roles retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/permissions": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get all permissions",
                "operationId": "28b7596c68e5459f6a53175eeb74739c",
                "responses": {
                    "200": {
                        "description": "Permissions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permissions retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/assign-role": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Assign role to user",
                "operationId": "dc115086df84f0f90e737fb5d39e1a44",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "role"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "admin"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Role assigned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Role assigned successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/remove-role": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Remove role from user",
                "operationId": "4134703b9f251b662a40fcda20ccfc8d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "role"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "admin"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Role removed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Role removed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/give-permission": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Give permission to user",
                "operationId": "821aedd357300e1f4becff56c9bb42a5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "permission"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "permission": {
                                        "type": "string",
                                        "example": "view users"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Permission given successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission given successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/revoke-permission": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Revoke permission from user",
                "operationId": "e1b9319a0817cd9910106403bb5ce7b6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "permission"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "permission": {
                                        "type": "string",
                                        "example": "view users"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Permission revoked successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission revoked successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/user-activity/{userId}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get user activity",
                "operationId": "fe884e0864ef85198011a97d7eb8ad8f",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User activity retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User activity retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/api-logs": {
            "get": {
                "tags": [
                    "API Logs Management"
                ],
                "summary": "Get API call logs (Superadmin only)",
                "operationId": "5648a623713475deb569f4114cd6ee4f",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page (max 100)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "description": "Filter by HTTP method",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "GET",
                                "POST",
                                "PUT",
                                "DELETE",
                                "PATCH"
                            ]
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "success",
                                "error",
                                "warning"
                            ]
                        }
                    },
                    {
                        "name": "status_code",
                        "in": "query",
                        "description": "Filter by HTTP status code",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 200
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "Filter by user ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "ip_address",
                        "in": "query",
                        "description": "Filter by IP address",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "192.168.1.1"
                        }
                    },
                    {
                        "name": "endpoint",
                        "in": "query",
                        "description": "Filter by endpoint (partial match)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "api/v1/auth"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Filter from date (Y-m-d format)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2025-09-01"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Filter to date (Y-m-d format)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2025-09-30"
                        }
                    },
                    {
                        "name": "days",
                        "in": "query",
                        "description": "Filter by last N days",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 7
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "API logs retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "API logs retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "logs": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/ApiCallLog"
                                                    }
                                                },
                                                "pagination": {
                                                    "properties": {
                                                        "current_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "per_page": {
                                                            "type": "integer",
                                                            "example": 20
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 150
                                                        },
                                                        "last_page": {
                                                            "type": "integer",
                                                            "example": 8
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "statistics": {
                                                    "properties": {
                                                        "total_calls": {
                                                            "type": "integer",
                                                            "example": 150
                                                        },
                                                        "successful_calls": {
                                                            "type": "integer",
                                                            "example": 140
                                                        },
                                                        "failed_calls": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "average_response_time": {
                                                            "type": "number",
                                                            "example": 125.5
                                                        },
                                                        "total_data_transferred": {
                                                            "type": "string",
                                                            "example": "2.5 MB"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied - Superadmin only",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/api-logs/statistics": {
            "get": {
                "tags": [
                    "API Logs Management"
                ],
                "summary": "Get API call statistics (Superadmin only)",
                "operationId": "35d324aafdc429178b069e600543467b",
                "parameters": [
                    {
                        "name": "days",
                        "in": "query",
                        "description": "Number of days to analyze (default: 30)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 30
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "API statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "API statistics retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "overview": {
                                                    "type": "object"
                                                },
                                                "daily_stats": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "top_endpoints": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "top_users": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "status_codes": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/api-logs/cleanup": {
            "delete": {
                "tags": [
                    "API Logs Management"
                ],
                "summary": "Clean up API logs (Superadmin only)",
                "operationId": "497958216513746686c01c732b1b340c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "days"
                                ],
                                "properties": {
                                    "days": {
                                        "description": "Number of days to keep (logs older than this will be deleted)",
                                        "type": "integer",
                                        "example": 14
                                    },
                                    "dry_run": {
                                        "description": "If true, only show what would be deleted without actually deleting",
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "API logs cleaned up successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "API logs cleaned up successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "deleted_count": {
                                                    "type": "integer",
                                                    "example": 150
                                                },
                                                "remaining_count": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "space_freed": {
                                                    "type": "string",
                                                    "example": "2.5 MB"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/api-logs/{id}": {
            "get": {
                "tags": [
                    "API Logs Management"
                ],
                "summary": "Get specific API call log details (Superadmin only)",
                "operationId": "605b402c54d7a42ac9205941cf988237",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "API log ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "API log details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "API log details retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ApiCallLog"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "API log not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "b9e746d77661fb8df55d0ac63e1ece77",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "username",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "username": {
                                        "type": "string",
                                        "example": "johndoe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|abc123..."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "error": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "operationId": "a7997e7c1e3bfed64d4e56de82415931",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "login",
                                    "password"
                                ],
                                "properties": {
                                    "login": {
                                        "description": "Email or username",
                                        "type": "string",
                                        "example": "superadmin@pantheon.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|abc123..."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        },
                                        "error": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "operationId": "f6b8957b4c0b25636613a9f0512a8ba9",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logout successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get current user",
                "operationId": "37d33f0281f67d31d05b4c45eea0143b",
                "responses": {
                    "200": {
                        "description": "User retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh user token",
                "operationId": "c42c3cd7fd7fe0dbd5bcc42962059e90",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Token refreshed successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "2|def456..."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/bookings": {
            "get": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Get all bookings",
                "operationId": "2f7e7260c708227e4c44de9d5b59ea36",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "confirmed",
                                "cancelled",
                                "completed",
                                "no_show"
                            ]
                        }
                    },
                    {
                        "name": "merchant_id",
                        "in": "query",
                        "description": "Filter by merchant ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Filter bookings from date (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Filter bookings to date (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of bookings per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bookings retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bookings retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Booking"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Create new booking",
                "operationId": "9ec8aa3de0d1efdd0cfe72c27eac745c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "merchant_id",
                                    "service_name",
                                    "booking_date",
                                    "booking_time",
                                    "duration_minutes",
                                    "price"
                                ],
                                "properties": {
                                    "merchant_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "service_name": {
                                        "type": "string",
                                        "example": "Haircut"
                                    },
                                    "service_description": {
                                        "type": "string",
                                        "example": "Professional haircut and styling"
                                    },
                                    "booking_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-09-26"
                                    },
                                    "booking_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "14:30:00"
                                    },
                                    "duration_minutes": {
                                        "type": "integer",
                                        "example": 60
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 50
                                    },
                                    "currency": {
                                        "type": "string",
                                        "example": "USD"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Please arrive 10 minutes early"
                                    },
                                    "special_requests": {
                                        "type": "string",
                                        "example": "Wheelchair accessible"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Booking created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Booking created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Booking"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/bookings/my": {
            "get": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Get current user's bookings",
                "operationId": "fd6e30c3ff64848ad85fa396001b160a",
                "responses": {
                    "200": {
                        "description": "User bookings retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User bookings retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Booking"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/bookings/merchant": {
            "get": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Get merchant's bookings",
                "operationId": "5d964ddb9f27093ee04edcf758f57f52",
                "responses": {
                    "200": {
                        "description": "Merchant bookings retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Merchant bookings retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Booking"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/bookings/{id}": {
            "get": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Get booking by ID",
                "operationId": "fd0155f99c405cf6978c540b2fd76f64",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Booking ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Booking retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Booking"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Booking not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Update booking",
                "operationId": "c05e14803d319fd8e11c1e58dfeef2f0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Booking ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "service_name": {
                                        "type": "string",
                                        "example": "Updated Service"
                                    },
                                    "booking_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-09-27"
                                    },
                                    "booking_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "15:30:00"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Updated notes"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Booking updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Booking updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Booking"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Delete booking",
                "operationId": "cac928061de061c77bfc403f57876a18",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Booking ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Booking deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Booking not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/bookings/{id}/status": {
            "put": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Update booking status",
                "operationId": "ba8831517b63e3a08b547596b045d8bc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Booking ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "confirmed",
                                            "cancelled",
                                            "completed",
                                            "no_show"
                                        ],
                                        "example": "confirmed"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Booking status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Booking status updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Booking"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/login/{guard}": {
            "post": {
                "tags": [
                    "Enhanced Authentication"
                ],
                "summary": "Login with specific guard",
                "operationId": "7a893372cc5ae3ca8fd6806c02154e66",
                "parameters": [
                    {
                        "name": "guard",
                        "in": "path",
                        "description": "Authentication guard (web, api, superadmin, api_superadmin, admin, api_admin, vendor, api_vendor)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "web",
                                "api",
                                "superadmin",
                                "api_superadmin",
                                "admin",
                                "api_admin",
                                "vendor",
                                "api_vendor"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "login",
                                    "password"
                                ],
                                "properties": {
                                    "login": {
                                        "description": "Email or username",
                                        "type": "string",
                                        "example": "superadmin@pantheon.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    },
                                    "remember_me": {
                                        "description": "Remember login",
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "two_factor_code": {
                                        "description": "2FA code if required",
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                                                },
                                                "guard": {
                                                    "type": "string",
                                                    "example": "api_admin"
                                                },
                                                "available_guards": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "security_info": {
                                                    "properties": {
                                                        "requires_2fa": {
                                                            "type": "boolean",
                                                            "example": false
                                                        },
                                                        "session_lifetime": {
                                                            "type": "integer",
                                                            "example": 60
                                                        },
                                                        "rate_limit": {
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenResponse"
                                }
                            }
                        }
                    },
                    "423": {
                        "description": "Account locked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LockedResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/guards": {
            "get": {
                "tags": [
                    "Enhanced Authentication"
                ],
                "summary": "Get available guards for user",
                "operationId": "db9c24099c0111c793102e37e2f76464",
                "responses": {
                    "200": {
                        "description": "Available guards retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Available guards retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_guard": {
                                                    "type": "string",
                                                    "example": "api"
                                                },
                                                "available_guards": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "guard_info": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/switch-guard": {
            "post": {
                "tags": [
                    "Enhanced Authentication"
                ],
                "summary": "Switch user guard",
                "operationId": "5414066df30051d11e3ad4dbbce42324",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "guard"
                                ],
                                "properties": {
                                    "guard": {
                                        "description": "Target guard",
                                        "type": "string",
                                        "example": "api_admin"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Guard switched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Guard switched successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "previous_guard": {
                                                    "type": "string",
                                                    "example": "api"
                                                },
                                                "current_guard": {
                                                    "type": "string",
                                                    "example": "api_admin"
                                                },
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/guard-statistics": {
            "get": {
                "tags": [
                    "Enhanced Authentication"
                ],
                "summary": "Get guard statistics (Admin only)",
                "operationId": "09b2fa57b5af559d80c00f155abdfe75",
                "responses": {
                    "200": {
                        "description": "Guard statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Guard statistics retrieved successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/external/products": {
            "get": {
                "tags": [
                    "External API Integration"
                ],
                "summary": "Get products from external warehouse",
                "operationId": "4e324eecdf529bd5381be7ea789e318f",
                "parameters": [
                    {
                        "name": "merchant_id",
                        "in": "query",
                        "description": "Merchant ID to get products for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Product category filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for products",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Products retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "products": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "merchant_info": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/external/packages": {
            "get": {
                "tags": [
                    "External API Integration"
                ],
                "summary": "Get packages from external warehouse",
                "operationId": "294dc1265bfd7527d44bdc84da3cdd25",
                "parameters": [
                    {
                        "name": "merchant_id",
                        "in": "query",
                        "description": "Merchant ID to get packages for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Package type filter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "umrah",
                                "hajj",
                                "qurban"
                            ]
                        }
                    },
                    {
                        "name": "price_min",
                        "in": "query",
                        "description": "Minimum price filter",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "price_max",
                        "in": "query",
                        "description": "Maximum price filter",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Packages retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Packages retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "packages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "types": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/external/insurance": {
            "get": {
                "tags": [
                    "External API Integration"
                ],
                "summary": "Get insurance options from external warehouse",
                "operationId": "b6d61168d01b1f7aceaec69565b9a781",
                "parameters": [
                    {
                        "name": "merchant_id",
                        "in": "query",
                        "description": "Merchant ID to get insurance for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "package_id",
                        "in": "query",
                        "description": "Package ID to get insurance for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Insurance options retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Insurance options retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "insurance_options": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/external/resources": {
            "get": {
                "tags": [
                    "External API Integration"
                ],
                "summary": "Get resources from external warehouse",
                "operationId": "494e74a232987160faf3dff15d5f254a",
                "parameters": [
                    {
                        "name": "merchant_id",
                        "in": "query",
                        "description": "Merchant ID to get resources for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "resource_type",
                        "in": "query",
                        "description": "Resource type filter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "images",
                                "documents",
                                "videos",
                                "guides"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resources retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Resources retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "resources": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 100
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/external/marketing": {
            "get": {
                "tags": [
                    "External API Integration"
                ],
                "summary": "Get marketing materials from external warehouse",
                "operationId": "c5decc52e1bce368734b3b467be182dd",
                "parameters": [
                    {
                        "name": "merchant_id",
                        "in": "query",
                        "description": "Merchant ID to get marketing for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "campaign_type",
                        "in": "query",
                        "description": "Campaign type filter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "email",
                                "social",
                                "banner",
                                "brochure"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Marketing materials retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Marketing materials retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "marketing_materials": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 20
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/external/promotions": {
            "get": {
                "tags": [
                    "External API Integration"
                ],
                "summary": "Get promotions from external warehouse",
                "operationId": "5192bdf28d8fe1290c80389d5d56fe81",
                "parameters": [
                    {
                        "name": "merchant_id",
                        "in": "query",
                        "description": "Merchant ID to get promotions for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "active_only",
                        "in": "query",
                        "description": "Show only active promotions",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Promotions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Promotions retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "promotions": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 15
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/external/booking/redirect": {
            "post": {
                "tags": [
                    "External API Integration"
                ],
                "summary": "Redirect user to merchant booking page",
                "operationId": "c9469b2183e341e959cb0eab07970dae",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "merchant_id",
                                    "package_id",
                                    "user_id"
                                ],
                                "properties": {
                                    "merchant_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "package_id": {
                                        "type": "string",
                                        "example": "PKG_UMRAH_001"
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "insurance_id": {
                                        "type": "string",
                                        "example": "INS_001"
                                    },
                                    "special_requests": {
                                        "type": "string",
                                        "example": "Wheelchair accessible"
                                    },
                                    "redirect_url": {
                                        "type": "string",
                                        "example": "https://merchant.com/booking"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Redirect URL generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Redirect URL generated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "redirect_url": {
                                                    "type": "string",
                                                    "example": "https://merchant.com/booking?token=abc123"
                                                },
                                                "booking_token": {
                                                    "type": "string",
                                                    "example": "abc123"
                                                },
                                                "expires_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-26T10:30:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/external/aggregated": {
            "get": {
                "tags": [
                    "External API Integration"
                ],
                "summary": "Get aggregated data from multiple external APIs",
                "operationId": "6bcb509f830206e4549c8a919809d723",
                "parameters": [
                    {
                        "name": "merchant_id",
                        "in": "query",
                        "description": "Merchant ID to get data for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "endpoints",
                        "in": "query",
                        "description": "Comma-separated list of endpoints to fetch (products,packages,insurance,resources,marketing,promotions)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "products,packages,insurance"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term across all endpoints",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Aggregated data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Aggregated data retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "pagination": {
                                                    "properties": {
                                                        "current_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "per_page": {
                                                            "type": "integer",
                                                            "example": 20
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 100
                                                        },
                                                        "last_page": {
                                                            "type": "integer",
                                                            "example": 5
                                                        },
                                                        "has_more": {
                                                            "type": "boolean",
                                                            "example": true
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "endpoints": {
                                                    "properties": {
                                                        "products": {
                                                            "type": "object"
                                                        },
                                                        "packages": {
                                                            "type": "object"
                                                        },
                                                        "insurance": {
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "summary": {
                                                    "properties": {
                                                        "total_items": {
                                                            "type": "integer",
                                                            "example": 100
                                                        },
                                                        "successful_endpoints": {
                                                            "type": "integer",
                                                            "example": 3
                                                        },
                                                        "failed_endpoints": {
                                                            "type": "integer",
                                                            "example": 0
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/external/dashboard": {
            "get": {
                "tags": [
                    "External API Integration"
                ],
                "summary": "Get dashboard data from all external APIs",
                "operationId": "cae5e2b093e3ca94d495f9a8d86ff8ce",
                "parameters": [
                    {
                        "name": "merchant_id",
                        "in": "query",
                        "description": "Merchant ID to get dashboard data for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dashboard data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Dashboard data retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "overview": {
                                                    "properties": {
                                                        "total_products": {
                                                            "type": "integer",
                                                            "example": 150
                                                        },
                                                        "total_packages": {
                                                            "type": "integer",
                                                            "example": 25
                                                        },
                                                        "active_promotions": {
                                                            "type": "integer",
                                                            "example": 5
                                                        },
                                                        "available_insurance": {
                                                            "type": "integer",
                                                            "example": 10
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "recent_items": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "featured_packages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "active_promotions": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "api_status": {
                                                    "properties": {
                                                        "products_api": {
                                                            "type": "string",
                                                            "example": "online"
                                                        },
                                                        "packages_api": {
                                                            "type": "string",
                                                            "example": "online"
                                                        },
                                                        "insurance_api": {
                                                            "type": "string",
                                                            "example": "offline"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/health": {
            "get": {
                "tags": [
                    "Health"
                ],
                "summary": "Basic health check",
                "description": "Returns basic health status of the Pantheon Template Service V1 API",
                "operationId": "getHealth",
                "responses": {
                    "200": {
                        "description": "Service is healthy",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Service is unhealthy",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Service unavailable"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "error": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/health/detailed": {
            "get": {
                "tags": [
                    "Health"
                ],
                "summary": "Detailed health check",
                "description": "Returns comprehensive health status including database, cache, storage, memory, disk space, environment, services, models, and permissions checks",
                "operationId": "getDetailedHealth",
                "responses": {
                    "200": {
                        "description": "Detailed health status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DetailedHealthResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Health check failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Health check failed"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "error": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login-history": {
            "get": {
                "tags": [
                    "Login History"
                ],
                "summary": "Get user login history",
                "operationId": "51002d995563488d550bc402dfa1d635",
                "parameters": [
                    {
                        "name": "days",
                        "in": "query",
                        "description": "Number of days to look back (default: 30)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 30
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to return (default: 50)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 50
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login history retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login history retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "login_history": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/UserLoginHistory"
                                                    }
                                                },
                                                "statistics": {
                                                    "properties": {
                                                        "total_logins": {
                                                            "type": "integer",
                                                            "example": 25
                                                        },
                                                        "successful_logins": {
                                                            "type": "integer",
                                                            "example": 23
                                                        },
                                                        "failed_logins": {
                                                            "type": "integer",
                                                            "example": 2
                                                        },
                                                        "unique_ips": {
                                                            "type": "integer",
                                                            "example": 3
                                                        },
                                                        "unique_devices": {
                                                            "type": "integer",
                                                            "example": 2
                                                        },
                                                        "average_session_duration": {
                                                            "type": "number",
                                                            "example": 45.5
                                                        },
                                                        "last_login": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2025-09-26T07:30:00Z"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/login-statistics": {
            "get": {
                "tags": [
                    "Login History"
                ],
                "summary": "Get user login statistics",
                "operationId": "ab7c0cbe6f40cab0ccdae12464a7dec5",
                "parameters": [
                    {
                        "name": "days",
                        "in": "query",
                        "description": "Number of days to look back (default: 30)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 30
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login statistics retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "total_logins": {
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "successful_logins": {
                                                    "type": "integer",
                                                    "example": 23
                                                },
                                                "failed_logins": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "unique_ips": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "unique_devices": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "average_session_duration": {
                                                    "type": "number",
                                                    "example": 45.5
                                                },
                                                "last_login": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-26T07:30:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/merchants": {
            "get": {
                "tags": [
                    "Merchants"
                ],
                "summary": "Get all merchants",
                "operationId": "27e47fedbec2c3e87bfbc96dc72449b4",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "inactive",
                                "suspended",
                                "pending"
                            ]
                        }
                    },
                    {
                        "name": "business_type",
                        "in": "query",
                        "description": "Filter by business type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of merchants per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Merchants retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Merchants retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Merchant"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Merchants"
                ],
                "summary": "Create new merchant",
                "operationId": "6107f436974b428c8bef94bdc9a3d086",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "business_name",
                                    "business_type",
                                    "phone",
                                    "email",
                                    "address",
                                    "city",
                                    "state",
                                    "country",
                                    "postal_code"
                                ],
                                "properties": {
                                    "business_name": {
                                        "type": "string",
                                        "example": "Acme Corporation"
                                    },
                                    "business_type": {
                                        "type": "string",
                                        "example": "restaurant"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Fine dining restaurant"
                                    },
                                    "website": {
                                        "type": "string",
                                        "example": "https://acme.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "contact@acme.com"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St, City, State 12345"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "New York"
                                    },
                                    "state": {
                                        "type": "string",
                                        "example": "NY"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "United States"
                                    },
                                    "postal_code": {
                                        "type": "string",
                                        "example": "10001"
                                    },
                                    "latitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 40.7128
                                    },
                                    "longitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": -74.006
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Merchant created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Merchant created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Merchant"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/merchants/profile": {
            "get": {
                "tags": [
                    "Merchants"
                ],
                "summary": "Get current user's merchant profile",
                "operationId": "2ac4fee0a9ab25a6ab175f109aa369fa",
                "responses": {
                    "200": {
                        "description": "Merchant profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Merchant profile retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Merchant"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Merchant profile not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Merchants"
                ],
                "summary": "Update current user's merchant profile",
                "operationId": "f1c6dc30dcd46eae7eab38ed16bff22e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "business_name": {
                                        "type": "string",
                                        "example": "Acme Corporation"
                                    },
                                    "business_type": {
                                        "type": "string",
                                        "example": "restaurant"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Fine dining restaurant"
                                    },
                                    "website": {
                                        "type": "string",
                                        "example": "https://acme.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "contact@acme.com"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St, City, State 12345"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "New York"
                                    },
                                    "state": {
                                        "type": "string",
                                        "example": "NY"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "United States"
                                    },
                                    "postal_code": {
                                        "type": "string",
                                        "example": "10001"
                                    },
                                    "latitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 40.7128
                                    },
                                    "longitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": -74.006
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Merchant profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Merchant profile updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Merchant"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/merchants/settings": {
            "get": {
                "tags": [
                    "Merchants"
                ],
                "summary": "Get merchant settings",
                "operationId": "1b124f2e71fb4b39476842e7340076d1",
                "responses": {
                    "200": {
                        "description": "Merchant settings retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Merchant settings retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/MerchantSetting"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Merchants"
                ],
                "summary": "Update merchant settings",
                "operationId": "0618095104cd1657b6fd59f114e99467",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "webhook_url": {
                                        "type": "string",
                                        "example": "https://merchant.com/webhook"
                                    },
                                    "callback_url": {
                                        "type": "string",
                                        "example": "https://merchant.com/callback"
                                    },
                                    "return_url": {
                                        "type": "string",
                                        "example": "https://merchant.com/return"
                                    },
                                    "currency": {
                                        "type": "string",
                                        "example": "USD"
                                    },
                                    "timezone": {
                                        "type": "string",
                                        "example": "America/New_York"
                                    },
                                    "language": {
                                        "type": "string",
                                        "example": "en"
                                    },
                                    "settings": {
                                        "type": "object",
                                        "example": {
                                            "theme": "dark",
                                            "notifications": true
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Merchant settings updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Merchant settings updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/MerchantSetting"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/merchants/{id}": {
            "get": {
                "tags": [
                    "Merchants"
                ],
                "summary": "Get merchant by ID",
                "operationId": "64c1d20964c4c67b3225865220027fd9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Merchant ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Merchant retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Merchant retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Merchant"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Merchant not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Merchants"
                ],
                "summary": "Update merchant",
                "operationId": "720008407976fcabe0fa0a16ab0d0c6d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Merchant ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "business_name": {
                                        "type": "string",
                                        "example": "Updated Business Name"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive",
                                            "suspended",
                                            "pending"
                                        ]
                                    },
                                    "is_verified": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Merchant updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Merchant updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Merchant"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Merchants"
                ],
                "summary": "Delete merchant",
                "operationId": "eba71ecba9868a567dd13f71db995169",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Merchant ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Merchant deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Merchant deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Merchant not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/modules": {
            "get": {
                "tags": [
                    "Module Access Management"
                ],
                "summary": "Get all available modules",
                "operationId": "353a43ae7e2a331eaa6ef623e26572b8",
                "responses": {
                    "200": {
                        "description": "Modules retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Modules retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "user_management"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "User Management"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Manage users, roles, and permissions"
                                                    },
                                                    "icon": {
                                                        "type": "string",
                                                        "example": "users"
                                                    },
                                                    "permissions": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "example": "view users"
                                                        }
                                                    },
                                                    "is_active": {
                                                        "type": "boolean",
                                                        "example": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/users/{userId}/module-access": {
            "get": {
                "tags": [
                    "Module Access Management"
                ],
                "summary": "Get user's module access",
                "operationId": "b203eae532aa9094fedcc76bb95dcf13",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User module access retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User module access retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                },
                                                "modules": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "user_management"
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "User Management"
                                                            },
                                                            "has_access": {
                                                                "type": "boolean",
                                                                "example": true
                                                            },
                                                            "permissions": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/users/{userId}/grant-module-access": {
            "post": {
                "tags": [
                    "Module Access Management"
                ],
                "summary": "Grant module access to user",
                "operationId": "a2ef03c5601a4342219d19c8ab412219",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "module_id"
                                ],
                                "properties": {
                                    "module_id": {
                                        "description": "Module ID",
                                        "type": "string",
                                        "example": "user_management"
                                    },
                                    "permissions": {
                                        "description": "Specific permissions to grant",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "view users",
                                            "create users"
                                        ]
                                    },
                                    "grant_all": {
                                        "description": "Grant all module permissions",
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Module access granted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Module access granted successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/users/{userId}/revoke-module-access": {
            "post": {
                "tags": [
                    "Module Access Management"
                ],
                "summary": "Revoke module access from user",
                "operationId": "684ef2886fdc43cc715eb579023ba452",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "module_id"
                                ],
                                "properties": {
                                    "module_id": {
                                        "description": "Module ID",
                                        "type": "string",
                                        "example": "user_management"
                                    },
                                    "permissions": {
                                        "description": "Specific permissions to revoke",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "view users",
                                            "create users"
                                        ]
                                    },
                                    "revoke_all": {
                                        "description": "Revoke all module permissions",
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Module access revoked successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Module access revoked successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/users/{userId}/bulk-module-access": {
            "post": {
                "tags": [
                    "Module Access Management"
                ],
                "summary": "Bulk update user module access",
                "operationId": "6a1f07a58e607fba4fed8b9028786246",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "modules"
                                ],
                                "properties": {
                                    "modules": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "module_id": {
                                                    "type": "string",
                                                    "example": "user_management"
                                                },
                                                "action": {
                                                    "type": "string",
                                                    "enum": [
                                                        "grant",
                                                        "revoke"
                                                    ],
                                                    "example": "grant"
                                                },
                                                "permissions": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "view users",
                                                        "create users"
                                                    ]
                                                },
                                                "grant_all": {
                                                    "type": "boolean",
                                                    "example": false
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Bulk module access updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bulk module access updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/notifications": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Get user notifications",
                "operationId": "cac3bdde44f0be0512f7d05c0a6064e4",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by notification type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "info",
                                "success",
                                "warning",
                                "error"
                            ]
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter by category",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "system",
                                "booking",
                                "payment",
                                "security",
                                "marketing"
                            ]
                        }
                    },
                    {
                        "name": "unread_only",
                        "in": "query",
                        "description": "Show only unread notifications",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of notifications per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notifications retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Notifications retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Notification"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Create new notification",
                "operationId": "1fd84d2c66035574da4902f416cbd96a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "type",
                                    "category",
                                    "title",
                                    "message"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "info",
                                            "success",
                                            "warning",
                                            "error"
                                        ],
                                        "example": "info"
                                    },
                                    "category": {
                                        "type": "string",
                                        "enum": [
                                            "system",
                                            "booking",
                                            "payment",
                                            "security",
                                            "marketing"
                                        ],
                                        "example": "booking"
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Booking Confirmed"
                                    },
                                    "message": {
                                        "type": "string",
                                        "example": "Your booking for tomorrow has been confirmed"
                                    },
                                    "data": {
                                        "type": "object",
                                        "example": {
                                            "booking_id": 123,
                                            "action_url": "/bookings/123"
                                        }
                                    },
                                    "priority": {
                                        "type": "string",
                                        "enum": [
                                            "low",
                                            "normal",
                                            "high",
                                            "urgent"
                                        ],
                                        "example": "normal"
                                    },
                                    "is_urgent": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "is_actionable": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Notification created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Notification created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Notification"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/notifications/unread-count": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Get unread notification count",
                "operationId": "9fd717daa9c0cfd209252ee25d0715ea",
                "responses": {
                    "200": {
                        "description": "Unread count retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unread count retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "unread_count": {
                                                    "type": "integer",
                                                    "example": 5
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/notifications/{id}": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Get notification by ID",
                "operationId": "22581e4d73af25a9036c6610c7e8fc72",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Notification ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Notification retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Notification"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Notification not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Delete notification",
                "operationId": "3f8fe68ea04e79015d8aad5912cadbc1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Notification ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Notification deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/notifications/{id}/read": {
            "put": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Mark notification as read",
                "operationId": "eada5778d93471d6a891ab461f28859b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Notification ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification marked as read",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Notification marked as read"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Notification"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/notifications/mark-all-read": {
            "put": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Mark all notifications as read",
                "operationId": "097a86e2dde9db02ebb6078a12313358",
                "responses": {
                    "200": {
                        "description": "All notifications marked as read",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All notifications marked as read"
                                        },
                                        "data": {
                                            "properties": {
                                                "updated_count": {
                                                    "type": "integer",
                                                    "example": 5
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/notifications/clear-all": {
            "delete": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Clear all notifications",
                "operationId": "4ea65750f354ce4ed23e922cf72c9e3c",
                "responses": {
                    "200": {
                        "description": "All notifications cleared",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All notifications cleared"
                                        },
                                        "data": {
                                            "properties": {
                                                "deleted_count": {
                                                    "type": "integer",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/permissions": {
            "get": {
                "tags": [
                    "Permission Management"
                ],
                "summary": "Get all permissions",
                "operationId": "c8e60e1cdfb99866cdca9b2d3737f847",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for permission name",
                        "schema": {
                            "type": "string",
                            "example": "user"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter by permission category",
                        "schema": {
                            "type": "string",
                            "example": "user_management"
                        }
                    },
                    {
                        "name": "with_roles",
                        "in": "query",
                        "description": "Include roles that have this permission",
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permissions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permissions retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "permissions": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Permission"
                                                    }
                                                },
                                                "pagination": {
                                                    "properties": {
                                                        "current_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "per_page": {
                                                            "type": "integer",
                                                            "example": 15
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 25
                                                        },
                                                        "last_page": {
                                                            "type": "integer",
                                                            "example": 2
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "categories": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Permission Management"
                ],
                "summary": "Create a new permission",
                "operationId": "7c0560f85b8e5d3b488f6027f524f9e5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "display_name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "manage content"
                                    },
                                    "display_name": {
                                        "type": "string",
                                        "example": "Manage Content"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Can create, edit, and delete content"
                                    },
                                    "category": {
                                        "type": "string",
                                        "example": "content"
                                    },
                                    "guard_name": {
                                        "type": "string",
                                        "example": "web"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Permission created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Permission"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/permissions/{id}": {
            "get": {
                "tags": [
                    "Permission Management"
                ],
                "summary": "Get specific permission by ID",
                "operationId": "009c45197ac62845b07dead117dca29b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Permission ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Permission"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Permission Management"
                ],
                "summary": "Update permission",
                "operationId": "2650c77a50b4baf1151ee61be6271ddc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Permission ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "display_name": {
                                        "type": "string",
                                        "example": "Manage Content"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Can create, edit, and delete content"
                                    },
                                    "category": {
                                        "type": "string",
                                        "example": "content"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Permission updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Permission"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Permission Management"
                ],
                "summary": "Delete permission",
                "operationId": "3138dd38d34ebdb8155d39ece9a23fcb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Permission ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/permissions/user/{userId}": {
            "get": {
                "tags": [
                    "Permission Management"
                ],
                "summary": "Get user's permissions",
                "operationId": "8d3fe6abbda363b4281efd8a684aecc5",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User permissions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User permissions retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "permissions": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Permission"
                                                    }
                                                },
                                                "roles": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Role"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/permissions/user/{userId}/assign": {
            "post": {
                "tags": [
                    "Permission Management"
                ],
                "summary": "Assign permissions to user",
                "operationId": "02220a862a96ff9df1867d4f543edc43",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "permissions"
                                ],
                                "properties": {
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "view users",
                                            "create users"
                                        ]
                                    },
                                    "sync": {
                                        "description": "Whether to sync (replace) or add permissions",
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Permissions assigned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permissions assigned successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/permissions/user/{userId}/revoke": {
            "post": {
                "tags": [
                    "Permission Management"
                ],
                "summary": "Revoke permissions from user",
                "operationId": "700136727c7965e2b064fe34e3bfb049",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "permissions"
                                ],
                                "properties": {
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "delete users"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Permissions revoked successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permissions revoked successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/permissions/statistics": {
            "get": {
                "tags": [
                    "Permission Management"
                ],
                "summary": "Get permission statistics",
                "operationId": "12c09ac3646e780f417053832f871473",
                "responses": {
                    "200": {
                        "description": "Permission statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission statistics retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "total_permissions": {
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "category_distribution": {
                                                    "properties": {
                                                        "user_management": {
                                                            "type": "integer",
                                                            "example": 8
                                                        },
                                                        "content_management": {
                                                            "type": "integer",
                                                            "example": 6
                                                        },
                                                        "system_administration": {
                                                            "type": "integer",
                                                            "example": 11
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "most_used_permissions": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "example": "view users"
                                                            },
                                                            "usage_count": {
                                                                "type": "integer",
                                                                "example": 15
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/profile": {
            "get": {
                "tags": [
                    "Profile Management"
                ],
                "summary": "Get user profile",
                "operationId": "dffac35700b3186de8d19cc212fe0285",
                "responses": {
                    "200": {
                        "description": "Profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Profile Management"
                ],
                "summary": "Update user profile",
                "operationId": "d682da2fd566e34f597e169ac582ad3f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "username": {
                                        "type": "string",
                                        "example": "johndoe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "avatar": {
                                        "type": "string",
                                        "example": "https://example.com/avatar.jpg"
                                    },
                                    "current_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "currentpassword"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword"
                                    },
                                    "new_password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/profile/permissions": {
            "get": {
                "tags": [
                    "Profile Management"
                ],
                "summary": "Get user permissions",
                "operationId": "05b37941bd320879feeb6c5aa1a52866",
                "responses": {
                    "200": {
                        "description": "Permissions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permissions retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "roles": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "user"
                                                            },
                                                            "permissions": {
                                                                "type": "array",
                                                                "items": {
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "integer",
                                                                            "example": 1
                                                                        },
                                                                        "name": {
                                                                            "type": "string",
                                                                            "example": "view own profile"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "permissions": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "view own profile"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "can_view_profile": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "can_edit_profile": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/roles": {
            "get": {
                "tags": [
                    "Role Management"
                ],
                "summary": "Get all roles with permissions",
                "operationId": "c1294bb85dfc016a8f9c0d3f0907293f",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for role name",
                        "schema": {
                            "type": "string",
                            "example": "admin"
                        }
                    },
                    {
                        "name": "with_permissions",
                        "in": "query",
                        "description": "Include permissions in response",
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    {
                        "name": "with_users",
                        "in": "query",
                        "description": "Include user count in response",
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Roles retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Roles retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "roles": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Role"
                                                    }
                                                },
                                                "pagination": {
                                                    "properties": {
                                                        "current_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "per_page": {
                                                            "type": "integer",
                                                            "example": 15
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 4
                                                        },
                                                        "last_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Role Management"
                ],
                "summary": "Create a new role",
                "operationId": "c7f58f49125e9b60da0f0db6890a4f22",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "display_name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "content_manager"
                                    },
                                    "display_name": {
                                        "type": "string",
                                        "example": "Content Manager"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Manages content and media"
                                    },
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "view content",
                                            "create content",
                                            "edit content"
                                        ]
                                    },
                                    "guard_name": {
                                        "type": "string",
                                        "example": "web"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Role created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Role created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Role"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/roles/{id}": {
            "get": {
                "tags": [
                    "Role Management"
                ],
                "summary": "Get specific role by ID",
                "operationId": "9004c1b664a5ad189ceea42fb66f4adc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Role retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Role"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Role Management"
                ],
                "summary": "Update role",
                "operationId": "b3bbedf26c1519fed8b75569959e525c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "display_name": {
                                        "type": "string",
                                        "example": "Content Manager"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Manages content and media"
                                    },
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "view content",
                                            "create content",
                                            "edit content"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Role updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Role updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Role"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Role Management"
                ],
                "summary": "Delete role",
                "operationId": "6bc525095ab83caa6eff5e63447cf7f5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Role deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/roles/{id}/assign-permissions": {
            "post": {
                "tags": [
                    "Role Management"
                ],
                "summary": "Assign permissions to role",
                "operationId": "359cbd873de1589117ce2265037ebafc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "permissions"
                                ],
                                "properties": {
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "view users",
                                            "create users"
                                        ]
                                    },
                                    "sync": {
                                        "description": "Whether to sync (replace) or add permissions",
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Permissions assigned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permissions assigned successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/roles/{id}/revoke-permissions": {
            "post": {
                "tags": [
                    "Role Management"
                ],
                "summary": "Revoke permissions from role",
                "operationId": "389555b48bd13f86c1f44d2de491fc81",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "permissions"
                                ],
                                "properties": {
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "delete users"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Permissions revoked successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permissions revoked successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/roles/statistics": {
            "get": {
                "tags": [
                    "Role Management"
                ],
                "summary": "Get role statistics",
                "operationId": "245392a2fe7d52803de4cf81b31830e7",
                "responses": {
                    "200": {
                        "description": "Role statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Role statistics retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "total_roles": {
                                                    "type": "integer",
                                                    "example": 4
                                                },
                                                "role_distribution": {
                                                    "properties": {
                                                        "superadmin": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "admin": {
                                                            "type": "integer",
                                                            "example": 2
                                                        },
                                                        "vendor": {
                                                            "type": "integer",
                                                            "example": 5
                                                        },
                                                        "user": {
                                                            "type": "integer",
                                                            "example": 50
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "permissions_per_role": {
                                                    "properties": {
                                                        "superadmin": {
                                                            "type": "integer",
                                                            "example": 25
                                                        },
                                                        "admin": {
                                                            "type": "integer",
                                                            "example": 15
                                                        },
                                                        "vendor": {
                                                            "type": "integer",
                                                            "example": 8
                                                        },
                                                        "user": {
                                                            "type": "integer",
                                                            "example": 3
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/system/status": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Get system status",
                "operationId": "27965593a55a72ccbb7a632faf04c8a6",
                "responses": {
                    "200": {
                        "description": "System status retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "System status retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "operational"
                                                },
                                                "timestamp": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-01T12:00:00Z"
                                                },
                                                "uptime": {
                                                    "type": "string",
                                                    "example": "99.9%"
                                                },
                                                "version": {
                                                    "type": "string",
                                                    "example": "1.0.0"
                                                },
                                                "services": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Database"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "operational"
                                                            },
                                                            "response_time": {
                                                                "type": "integer",
                                                                "example": 50
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/system/quick-status": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Get quick system status",
                "operationId": "fd8fa327342b63b779bab4f342699f80",
                "responses": {
                    "200": {
                        "description": "Quick system status retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Quick system status retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "operational"
                                                },
                                                "timestamp": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-01T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/system/metrics": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Get system metrics",
                "operationId": "84ca427edd34c378e5f1fd5fa84fdc82",
                "responses": {
                    "200": {
                        "description": "System metrics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "System metrics retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "performance": {
                                                    "properties": {
                                                        "response_time": {
                                                            "type": "integer",
                                                            "example": 150
                                                        },
                                                        "throughput": {
                                                            "type": "integer",
                                                            "example": 1000
                                                        },
                                                        "error_rate": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 0.01
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "resources": {
                                                    "properties": {
                                                        "cpu_usage": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 45.5
                                                        },
                                                        "memory_usage": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 67.2
                                                        },
                                                        "disk_usage": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 23.8
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "database": {
                                                    "properties": {
                                                        "connections": {
                                                            "type": "integer",
                                                            "example": 5
                                                        },
                                                        "query_time": {
                                                            "type": "integer",
                                                            "example": 25
                                                        },
                                                        "cache_hit_rate": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 0.95
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/user-activities": {
            "get": {
                "tags": [
                    "User Activities"
                ],
                "summary": "Get user activities",
                "operationId": "d9d629fc4341ea0e9b742cd226c0d3b1",
                "parameters": [
                    {
                        "name": "activity_type",
                        "in": "query",
                        "description": "Filter by activity type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "login"
                        }
                    },
                    {
                        "name": "activity_category",
                        "in": "query",
                        "description": "Filter by activity category",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "authentication",
                                "profile",
                                "booking",
                                "payment",
                                "system"
                            ]
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "success",
                                "failed",
                                "warning"
                            ]
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Filter activities from date (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Filter activities to date (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of activities per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User activities retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User activities retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UserActivity"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User Activities"
                ],
                "summary": "Create user activity",
                "operationId": "0f97cb6c967f73e59ffc142124b8f8fb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "activity_type",
                                    "activity_category",
                                    "description"
                                ],
                                "properties": {
                                    "activity_type": {
                                        "type": "string",
                                        "example": "profile_update"
                                    },
                                    "activity_category": {
                                        "type": "string",
                                        "enum": [
                                            "authentication",
                                            "profile",
                                            "booking",
                                            "payment",
                                            "system"
                                        ],
                                        "example": "profile"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "User updated their profile information"
                                    },
                                    "resource_type": {
                                        "type": "string",
                                        "example": "User"
                                    },
                                    "resource_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "ip_address": {
                                        "type": "string",
                                        "example": "192.168.1.1"
                                    },
                                    "user_agent": {
                                        "type": "string",
                                        "example": "Mozilla/5.0..."
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "success",
                                            "failed",
                                            "warning"
                                        ],
                                        "example": "success"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User activity created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User activity created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserActivity"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user-activities/my": {
            "get": {
                "tags": [
                    "User Activities"
                ],
                "summary": "Get current user's activities",
                "operationId": "b4ca44594a890f4c34c94112cab28309",
                "responses": {
                    "200": {
                        "description": "User activities retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User activities retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UserActivity"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user-activities/{id}": {
            "get": {
                "tags": [
                    "User Activities"
                ],
                "summary": "Get user activity by ID",
                "operationId": "d26b73f3c345d3e4d94a8e342eb15b18",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Activity ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User activity retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User activity retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserActivity"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user-activities/statistics": {
            "get": {
                "tags": [
                    "User Activities"
                ],
                "summary": "Get user activity statistics",
                "operationId": "3c40c71b2a7fb8f046ec5f8047db6046",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "User ID (admin/superadmin only)",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "days",
                        "in": "query",
                        "description": "Number of days to look back",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activity statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Activity statistics retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "total_activities": {
                                                    "type": "integer",
                                                    "example": 150
                                                },
                                                "successful_activities": {
                                                    "type": "integer",
                                                    "example": 140
                                                },
                                                "failed_activities": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "activities_by_category": {
                                                    "type": "object"
                                                },
                                                "activities_by_type": {
                                                    "type": "object"
                                                },
                                                "daily_activities": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Get all users with advanced filtering and search",
                "operationId": "12e989554c281d650dff75443acabf54",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for name, email, username",
                        "schema": {
                            "type": "string",
                            "example": "john"
                        }
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Filter by role",
                        "schema": {
                            "type": "string",
                            "example": "admin"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "inactive",
                                "suspended"
                            ]
                        }
                    },
                    {
                        "name": "is_admin",
                        "in": "query",
                        "description": "Filter by admin status",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "is_vendor",
                        "in": "query",
                        "description": "Filter by vendor status",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort field",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "name",
                                "email",
                                "created_at",
                                "last_login_at"
                            ]
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Users retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "users": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/UserWithRoles"
                                                    }
                                                },
                                                "pagination": {
                                                    "properties": {
                                                        "current_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "per_page": {
                                                            "type": "integer",
                                                            "example": 15
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 100
                                                        },
                                                        "last_page": {
                                                            "type": "integer",
                                                            "example": 7
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "filters": {
                                                    "properties": {
                                                        "applied": {
                                                            "type": "object"
                                                        },
                                                        "available_roles": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "available_statuses": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Create a new user (Superadmin only)",
                "operationId": "64da9b5a20fa4f20e947ed61b2bbb6da",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "role"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "username": {
                                        "type": "string",
                                        "example": "johndoe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "user"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive",
                                            "suspended"
                                        ],
                                        "example": "active"
                                    },
                                    "is_admin": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "is_vendor": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserWithRoles"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/profile": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Get current user's profile",
                "operationId": "ff3612f9aedcefed24330811759fff3b",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User profile retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserWithRoles"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User Management"
                ],
                "summary": "Update current user's profile",
                "operationId": "926d02de58caeb804800b769106665c5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "username": {
                                        "type": "string",
                                        "example": "johndoe"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "avatar": {
                                        "type": "string",
                                        "example": "https://example.com/avatar.jpg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserWithRoles"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/{id}": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Get specific user by ID",
                "operationId": "a9d321d5dc6bc2613c6cf5ba92b76c89",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserWithRoles"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User Management"
                ],
                "summary": "Update user (Superadmin only)",
                "operationId": "5bcda8371b3cb9f863a47620e636be9b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "username": {
                                        "type": "string",
                                        "example": "johndoe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive",
                                            "suspended"
                                        ],
                                        "example": "active"
                                    },
                                    "is_admin": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "is_vendor": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "user"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserWithRoles"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User Management"
                ],
                "summary": "Delete user (Superadmin only)",
                "operationId": "0446b3779430bbd9ca0f106d9fd0a2ed",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/bulk-update": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Bulk update users (Superadmin only)",
                "operationId": "26308dd1847779a329502e04b8bd40dc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_ids",
                                    "updates"
                                ],
                                "properties": {
                                    "user_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    },
                                    "updates": {
                                        "properties": {
                                            "status": {
                                                "type": "string",
                                                "example": "active"
                                            },
                                            "role": {
                                                "type": "string",
                                                "example": "user"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Users updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Users updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "updated_count": {
                                                    "type": "integer",
                                                    "example": 3
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/statistics": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Get user statistics",
                "operationId": "836eab2affc311cae8ab99ce0cd57cb2",
                "responses": {
                    "200": {
                        "description": "User statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User statistics retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "total_users": {
                                                    "type": "integer",
                                                    "example": 150
                                                },
                                                "active_users": {
                                                    "type": "integer",
                                                    "example": 120
                                                },
                                                "inactive_users": {
                                                    "type": "integer",
                                                    "example": 20
                                                },
                                                "suspended_users": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "admin_users": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "vendor_users": {
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "role_distribution": {
                                                    "properties": {
                                                        "superadmin": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "admin": {
                                                            "type": "integer",
                                                            "example": 4
                                                        },
                                                        "vendor": {
                                                            "type": "integer",
                                                            "example": 25
                                                        },
                                                        "user": {
                                                            "type": "integer",
                                                            "example": 120
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "recent_registrations": {
                                                    "type": "integer",
                                                    "example": 15
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/users": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Get all users",
                "operationId": "cd6358061901507ab0579b3f49bda4fb",
                "parameters": [
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Filter by role",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "superadmin",
                                "admin",
                                "vendor",
                                "user"
                            ]
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "inactive",
                                "suspended"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of users per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Users retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Create a new user (Superadmin only)",
                "operationId": "c351437f0b4dca52083553c919314dbb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "role"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "username": {
                                        "type": "string",
                                        "example": "johndoe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "superadmin",
                                            "admin",
                                            "vendor",
                                            "user"
                                        ],
                                        "example": "admin"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive",
                                            "suspended"
                                        ],
                                        "example": "active"
                                    },
                                    "is_admin": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "is_vendor": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/users/{id}": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Get user by ID",
                "operationId": "875e79502d5dcea3c3a9347c01e7e4fd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User Management"
                ],
                "summary": "Update user",
                "operationId": "7ecd3a6a0705715ea01d2c0b7f763cfb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "username": {
                                        "type": "string",
                                        "example": "johndoe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive",
                                            "suspended"
                                        ],
                                        "example": "active"
                                    },
                                    "is_admin": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "is_vendor": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User Management"
                ],
                "summary": "Delete user",
                "operationId": "4a0609773dfcf63782a02a9ce5745dad",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user-preferences": {
            "get": {
                "tags": [
                    "User Preferences"
                ],
                "summary": "Get user preferences",
                "operationId": "27c1a748db82b25e166f5f98c254f8cb",
                "parameters": [
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter by preference category",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "notifications",
                                "privacy",
                                "appearance",
                                "language",
                                "security"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User preferences retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User preferences retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UserPreference"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User Preferences"
                ],
                "summary": "Create or update user preference",
                "operationId": "7425ba919b6c049cf73b90214ce934c2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "category",
                                    "key",
                                    "value",
                                    "data_type"
                                ],
                                "properties": {
                                    "category": {
                                        "type": "string",
                                        "example": "notifications"
                                    },
                                    "key": {
                                        "type": "string",
                                        "example": "email_notifications"
                                    },
                                    "value": {
                                        "type": "string",
                                        "example": "true"
                                    },
                                    "data_type": {
                                        "type": "string",
                                        "enum": [
                                            "boolean",
                                            "string",
                                            "integer",
                                            "float",
                                            "array",
                                            "object"
                                        ],
                                        "example": "boolean"
                                    },
                                    "is_public": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Receive email notifications"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User preference created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User preference created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserPreference"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user-preferences/{key}": {
            "get": {
                "tags": [
                    "User Preferences"
                ],
                "summary": "Get specific user preference",
                "operationId": "c59c3b5ee107129851c5587659080342",
                "parameters": [
                    {
                        "name": "key",
                        "in": "path",
                        "description": "Preference key",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "email_notifications"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User preference retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User preference retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserPreference"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User Preferences"
                ],
                "summary": "Update user preference",
                "operationId": "9a09902d6402d6b597e1b072deb59ce1",
                "parameters": [
                    {
                        "name": "key",
                        "in": "path",
                        "description": "Preference key",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "email_notifications"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "value": {
                                        "type": "string",
                                        "example": "false"
                                    },
                                    "is_public": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User preference updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User preference updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserPreference"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User Preferences"
                ],
                "summary": "Delete user preference",
                "operationId": "5592fd1490e9accb22c0d187dc8e0bdc",
                "parameters": [
                    {
                        "name": "key",
                        "in": "path",
                        "description": "Preference key",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "email_notifications"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User preference deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User preference deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user-preferences/bulk-update": {
            "post": {
                "tags": [
                    "User Preferences"
                ],
                "summary": "Bulk update user preferences",
                "operationId": "55adfbf5f5f0a4bf08581701091ef252",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "preferences"
                                ],
                                "properties": {
                                    "preferences": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "type": "string",
                                                    "example": "email_notifications"
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "example": "true"
                                                },
                                                "data_type": {
                                                    "type": "string",
                                                    "example": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User preferences updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User preferences updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "updated_count": {
                                                    "type": "integer",
                                                    "example": 3
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user-profiles": {
            "get": {
                "tags": [
                    "User Profiles"
                ],
                "summary": "Get all user profiles",
                "operationId": "3fc0481e9acbf7b714d71bb80935aedf",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of profiles per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profiles retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User profiles retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UserProfile"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User Profiles"
                ],
                "summary": "Create user profile",
                "operationId": "86198be9c65fdd9b1820b10c6169f911",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "bio": {
                                        "type": "string",
                                        "example": "Software developer"
                                    },
                                    "date_of_birth": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "enum": [
                                            "male",
                                            "female",
                                            "other",
                                            "prefer_not_to_say"
                                        ],
                                        "example": "male"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User profile created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User profile created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserProfile"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user-profiles/my": {
            "get": {
                "tags": [
                    "User Profiles"
                ],
                "summary": "Get current user's extended profile",
                "operationId": "b8e857686b853ec793f8c492966919ff",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User profile retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserProfile"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User Profiles"
                ],
                "summary": "Update current user's extended profile",
                "operationId": "caa70903fab251b7172f42e0fd4cdc84",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "bio": {
                                        "type": "string",
                                        "example": "Software developer with 5 years experience"
                                    },
                                    "date_of_birth": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "enum": [
                                            "male",
                                            "female",
                                            "other",
                                            "prefer_not_to_say"
                                        ],
                                        "example": "male"
                                    },
                                    "nationality": {
                                        "type": "string",
                                        "example": "American"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St, City, State 12345"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "New York"
                                    },
                                    "state": {
                                        "type": "string",
                                        "example": "NY"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "United States"
                                    },
                                    "postal_code": {
                                        "type": "string",
                                        "example": "10001"
                                    },
                                    "phone_secondary": {
                                        "type": "string",
                                        "example": "+1234567891"
                                    },
                                    "emergency_contact_name": {
                                        "type": "string",
                                        "example": "Jane Doe"
                                    },
                                    "emergency_contact_phone": {
                                        "type": "string",
                                        "example": "+1234567892"
                                    },
                                    "emergency_contact_relationship": {
                                        "type": "string",
                                        "example": "Spouse"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User profile updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserProfile"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user-profiles/{id}": {
            "get": {
                "tags": [
                    "User Profiles"
                ],
                "summary": "Get user profile by ID",
                "operationId": "682b64385594fcfc98e1c94b575f3b02",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User Profile ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User profile retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserProfile"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User Profiles"
                ],
                "summary": "Update user profile",
                "operationId": "b6d8b6fa4c77980d6774d9a9e7fbce11",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User Profile ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "bio": {
                                        "type": "string",
                                        "example": "Updated bio"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "enum": [
                                            "male",
                                            "female",
                                            "other",
                                            "prefer_not_to_say"
                                        ],
                                        "example": "female"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User profile updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserProfile"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User Profiles"
                ],
                "summary": "Delete user profile",
                "operationId": "7acd23df606cef535980486beb0c3664",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User Profile ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User profile deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/webhooks/booking/callback": {
            "post": {
                "tags": [
                    "Webhooks"
                ],
                "summary": "Handle booking callback from external merchant",
                "operationId": "f44b184adfa6e8031d19a2bb70b061c5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token",
                                    "status",
                                    "booking_id"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "booking_abc123_1234567890"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "success",
                                            "failed",
                                            "cancelled"
                                        ],
                                        "example": "success"
                                    },
                                    "booking_id": {
                                        "type": "string",
                                        "example": "EXT_BOOKING_123"
                                    },
                                    "external_booking_id": {
                                        "type": "string",
                                        "example": "MERCHANT_BOOKING_456"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 1500
                                    },
                                    "currency": {
                                        "type": "string",
                                        "example": "USD"
                                    },
                                    "payment_reference": {
                                        "type": "string",
                                        "example": "PAY_REF_789"
                                    },
                                    "booking_details": {
                                        "type": "object",
                                        "example": {
                                            "package_name": "Umrah Package",
                                            "travel_date": "2025-12-01"
                                        }
                                    },
                                    "customer_info": {
                                        "type": "object",
                                        "example": {
                                            "name": "John Doe",
                                            "email": "john@example.com",
                                            "phone": "+1234567890"
                                        }
                                    },
                                    "special_requests": {
                                        "type": "string",
                                        "example": "Wheelchair accessible"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Customer requested early check-in"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Webhook processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Webhook processed successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "booking_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "confirmed"
                                                },
                                                "external_booking_id": {
                                                    "type": "string",
                                                    "example": "EXT_BOOKING_123"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid webhook data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Booking session not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/webhooks/payment/callback": {
            "post": {
                "tags": [
                    "Webhooks"
                ],
                "summary": "Handle payment callback from external payment gateway",
                "operationId": "c8a0b20ae6cf209a8171b1a7baab7706",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "booking_id",
                                    "payment_status",
                                    "transaction_id"
                                ],
                                "properties": {
                                    "booking_id": {
                                        "type": "string",
                                        "example": "EXT_BOOKING_123"
                                    },
                                    "payment_status": {
                                        "type": "string",
                                        "enum": [
                                            "completed",
                                            "failed",
                                            "pending",
                                            "refunded"
                                        ],
                                        "example": "completed"
                                    },
                                    "transaction_id": {
                                        "type": "string",
                                        "example": "TXN_789"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 1500
                                    },
                                    "currency": {
                                        "type": "string",
                                        "example": "USD"
                                    },
                                    "payment_method": {
                                        "type": "string",
                                        "example": "credit_card"
                                    },
                                    "gateway_response": {
                                        "type": "object",
                                        "example": {
                                            "gateway": "stripe",
                                            "charge_id": "ch_123"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment webhook processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment webhook processed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/webhooks/status": {
            "get": {
                "tags": [
                    "Webhooks"
                ],
                "summary": "Get webhook status and statistics",
                "operationId": "1ef0058d38b7cee94c66f403fdb0ebf1",
                "parameters": [
                    {
                        "name": "merchant_id",
                        "in": "query",
                        "description": "Merchant ID to get webhook status for",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Webhook status retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Webhook status retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "webhook_url": {
                                                    "type": "string",
                                                    "example": "https://api.example.com/webhooks/booking/callback"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "last_received": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-26T10:30:00Z"
                                                },
                                                "total_received": {
                                                    "type": "integer",
                                                    "example": 150
                                                },
                                                "successful_webhooks": {
                                                    "type": "integer",
                                                    "example": 145
                                                },
                                                "failed_webhooks": {
                                                    "type": "integer",
                                                    "example": 5
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "description": "User's full name",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "username": {
                        "description": "User's username",
                        "type": "string",
                        "example": "johndoe"
                    },
                    "email": {
                        "description": "User's email address",
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "phone": {
                        "description": "User's phone number",
                        "type": "string",
                        "example": "+1234567890"
                    },
                    "avatar": {
                        "description": "URL to user's avatar",
                        "type": "string",
                        "example": "http://example.com/avatars/johndoe.jpg",
                        "nullable": true
                    },
                    "status": {
                        "description": "User's account status",
                        "type": "string",
                        "enum": [
                            "active",
                            "inactive",
                            "suspended"
                        ],
                        "example": "active"
                    },
                    "email_verified_at": {
                        "description": "Timestamp of email verification",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T12:00:00Z",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Timestamp of user creation",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T12:00:00Z"
                    },
                    "updated_at": {
                        "description": "Timestamp of last update",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "UserWithRoles": {
                "title": "User with Roles and Permissions",
                "description": "User model including clean roles and permissions (no pivot data)",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/User"
                    },
                    {
                        "properties": {
                            "roles": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "superadmin"
                                        },
                                        "guard_name": {
                                            "type": "string",
                                            "example": "web"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "permissions": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "view users"
                                        },
                                        "guard_name": {
                                            "type": "string",
                                            "example": "web"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UserLoginHistory": {
                "title": "User Login History",
                "description": "User login history record",
                "properties": {
                    "id": {
                        "description": "Login history ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "login_method": {
                        "description": "Login method used",
                        "type": "string",
                        "enum": [
                            "email",
                            "username"
                        ],
                        "example": "email"
                    },
                    "ip_address": {
                        "description": "IP address of the login",
                        "type": "string",
                        "example": "192.168.1.1"
                    },
                    "device_type": {
                        "description": "Device type",
                        "type": "string",
                        "enum": [
                            "desktop",
                            "mobile",
                            "tablet"
                        ],
                        "example": "desktop"
                    },
                    "browser": {
                        "description": "Browser used",
                        "type": "string",
                        "example": "Chrome 91.0.4472.124"
                    },
                    "os": {
                        "description": "Operating system",
                        "type": "string",
                        "example": "Windows 10"
                    },
                    "country": {
                        "description": "Country of login",
                        "type": "string",
                        "example": "United States"
                    },
                    "city": {
                        "description": "City of login",
                        "type": "string",
                        "example": "New York"
                    },
                    "is_successful": {
                        "description": "Whether login was successful",
                        "type": "boolean",
                        "example": true
                    },
                    "failure_reason": {
                        "description": "Reason for failed login",
                        "type": "string",
                        "example": "invalid_credentials",
                        "nullable": true
                    },
                    "login_at": {
                        "description": "Login timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-26T07:30:00Z"
                    },
                    "logout_at": {
                        "description": "Logout timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-26T08:30:00Z",
                        "nullable": true
                    },
                    "session_duration_minutes": {
                        "description": "Session duration in minutes",
                        "type": "integer",
                        "example": 60,
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Record creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-26T07:30:00Z"
                    },
                    "updated_at": {
                        "description": "Record update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-26T07:30:00Z"
                    }
                },
                "type": "object"
            },
            "ApiCallLog": {
                "title": "API Call Log",
                "description": "API call log record",
                "properties": {
                    "id": {
                        "description": "Log ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "user_id": {
                        "description": "User ID who made the call",
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "method": {
                        "description": "HTTP method",
                        "type": "string",
                        "enum": [
                            "GET",
                            "POST",
                            "PUT",
                            "DELETE",
                            "PATCH"
                        ],
                        "example": "POST"
                    },
                    "url": {
                        "description": "Full URL called",
                        "type": "string",
                        "example": "http://127.0.0.1:8000/api/v1/auth/login"
                    },
                    "endpoint": {
                        "description": "API endpoint path",
                        "type": "string",
                        "example": "api/v1/auth/login"
                    },
                    "ip_address": {
                        "description": "IP address of the caller",
                        "type": "string",
                        "example": "127.0.0.1"
                    },
                    "user_agent": {
                        "description": "User agent string",
                        "type": "string",
                        "example": "Mozilla/5.0..."
                    },
                    "request_headers": {
                        "description": "Request headers (sanitized)",
                        "type": "object"
                    },
                    "request_body": {
                        "description": "Request body (sanitized)",
                        "type": "object"
                    },
                    "request_params": {
                        "description": "Query parameters",
                        "type": "object"
                    },
                    "response_status": {
                        "description": "HTTP response status code",
                        "type": "integer",
                        "example": 200
                    },
                    "response_headers": {
                        "description": "Response headers",
                        "type": "object"
                    },
                    "response_body": {
                        "description": "Response body (truncated if large)",
                        "type": "string"
                    },
                    "response_size_bytes": {
                        "description": "Response size in bytes",
                        "type": "integer",
                        "example": 1024
                    },
                    "response_size_human": {
                        "description": "Response size in human readable format",
                        "type": "string",
                        "example": "1.0 KB"
                    },
                    "execution_time_ms": {
                        "description": "Execution time in milliseconds",
                        "type": "number",
                        "example": 125.5
                    },
                    "memory_usage_bytes": {
                        "description": "Memory usage in bytes",
                        "type": "integer",
                        "example": 2097152
                    },
                    "memory_usage_human": {
                        "description": "Memory usage in human readable format",
                        "type": "string",
                        "example": "2.0 MB"
                    },
                    "peak_memory_bytes": {
                        "description": "Peak memory usage in bytes",
                        "type": "integer",
                        "example": 4194304
                    },
                    "status": {
                        "description": "Call status",
                        "type": "string",
                        "enum": [
                            "success",
                            "error",
                            "warning"
                        ],
                        "example": "success"
                    },
                    "error_message": {
                        "description": "Error message if any",
                        "type": "string",
                        "nullable": true
                    },
                    "metadata": {
                        "description": "Additional metadata",
                        "type": "object"
                    },
                    "called_at": {
                        "description": "When the API was called",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-26T07:30:00Z"
                    },
                    "created_at": {
                        "description": "Record creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-26T07:30:00Z"
                    },
                    "updated_at": {
                        "description": "Record update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-26T07:30:00Z"
                    }
                },
                "type": "object"
            },
            "Merchant": {
                "title": "Merchant",
                "description": "Merchant model for vendors",
                "properties": {
                    "id": {
                        "description": "Merchant ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "user_id": {
                        "description": "User ID who owns this merchant account",
                        "type": "integer",
                        "example": 1
                    },
                    "business_name": {
                        "description": "Business name",
                        "type": "string",
                        "example": "Acme Corporation"
                    },
                    "business_type": {
                        "description": "Type of business",
                        "type": "string",
                        "example": "restaurant"
                    },
                    "description": {
                        "description": "Business description",
                        "type": "string",
                        "example": "Fine dining restaurant"
                    },
                    "website": {
                        "description": "Business website",
                        "type": "string",
                        "example": "https://acme.com",
                        "nullable": true
                    },
                    "phone": {
                        "description": "Business phone",
                        "type": "string",
                        "example": "+1234567890"
                    },
                    "email": {
                        "description": "Business email",
                        "type": "string",
                        "format": "email",
                        "example": "contact@acme.com"
                    },
                    "address": {
                        "description": "Business address",
                        "type": "string",
                        "example": "123 Main St, City, State 12345"
                    },
                    "city": {
                        "description": "City",
                        "type": "string",
                        "example": "New York"
                    },
                    "state": {
                        "description": "State/Province",
                        "type": "string",
                        "example": "NY"
                    },
                    "country": {
                        "description": "Country",
                        "type": "string",
                        "example": "United States"
                    },
                    "postal_code": {
                        "description": "Postal code",
                        "type": "string",
                        "example": "10001"
                    },
                    "latitude": {
                        "description": "Latitude",
                        "type": "number",
                        "format": "float",
                        "example": 40.7128
                    },
                    "longitude": {
                        "description": "Longitude",
                        "type": "number",
                        "format": "float",
                        "example": -74.006
                    },
                    "status": {
                        "description": "Merchant status",
                        "type": "string",
                        "enum": [
                            "active",
                            "inactive",
                            "suspended",
                            "pending"
                        ],
                        "example": "active"
                    },
                    "is_verified": {
                        "description": "Whether merchant is verified",
                        "type": "boolean",
                        "example": true
                    },
                    "verification_date": {
                        "description": "Verification date",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-26T07:30:00Z",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-26T07:30:00Z"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-26T07:30:00Z"
                    }
                },
                "type": "object"
            },
            "MerchantSetting": {
                "title": "Merchant Settings",
                "description": "Merchant settings and configuration",
                "properties": {
                    "id": {
                        "description": "Setting ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "merchant_id": {
                        "description": "Merchant ID",
                        "type": "integer",
                        "example": 1
                    },
                    "api_key": {
                        "description": "API key for merchant",
                        "type": "string",
                        "example": "merchant_api_key_123"
                    },
                    "api_secret": {
                        "description": "API secret for merchant",
                        "type": "string",
                        "example": "merchant_api_secret_456"
                    },
                    "webhook_url": {
                        "description": "Webhook URL for notifications",
                        "type": "string",
                        "example": "https://merchant.com/webhook",
                        "nullable": true
                    },
                    "callback_url": {
                        "description": "Callback URL for payments",
                        "type": "string",
                        "example": "https://merchant.com/callback",
                        "nullable": true
                    },
                    "return_url": {
                        "description": "Return URL after payment",
                        "type": "string",
                        "example": "https://merchant.com/return",
                        "nullable": true
                    },
                    "currency": {
                        "description": "Default currency",
                        "type": "string",
                        "example": "USD"
                    },
                    "timezone": {
                        "description": "Merchant timezone",
                        "type": "string",
                        "example": "America/New_York"
                    },
                    "language": {
                        "description": "Default language",
                        "type": "string",
                        "example": "en"
                    },
                    "settings": {
                        "description": "Additional settings JSON",
                        "type": "object",
                        "example": {
                            "theme": "dark",
                            "notifications": true
                        }
                    },
                    "is_active": {
                        "description": "Whether settings are active",
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-26T07:30:00Z"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-26T07:30:00Z"
                    }
                },
                "type": "object"
            },
            "Booking": {
                "title": "Booking",
                "description": "Booking model for appointments and reservations",
                "properties": {
                    "id": {
                        "description": "Booking ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "user_id": {
                        "description": "User who made the booking",
                        "type": "integer",
                        "example": 1
                    },
                    "merchant_id": {
                        "description": "Merchant providing the service",
                        "type": "integer",
                        "example": 1
                    },
                    "service_name": {
                        "description": "Name of the service",
                        "type": "string",
                        "example": "Haircut"
                    },
                    "service_description": {
                        "description": "Service description",
                        "type": "string",
                        "example": "Professional haircut and styling",
                        "nullable": true
                    },
                    "booking_date": {
                        "description": "Date of booking",
                        "type": "string",
                        "format": "date",
                        "example": "2025-09-26"
                    },
                    "booking_time": {
                        "description": "Time of booking",
                        "type": "string",
                        "format": "time",
                        "example": "14:30:00"
                    },
                    "duration_minutes": {
                        "description": "Duration in minutes",
                        "type": "integer",
                        "example": 60
                    },
                    "price": {
                        "description": "Price of the service",
                        "type": "number",
                        "format": "float",
                        "example": 50
                    },
                    "currency": {
                        "description": "Currency code",
                        "type": "string",
                        "example": "USD"
                    },
                    "status": {
                        "description": "Booking status",
                        "type": "string",
                        "enum": [
                            "pending",
                            "confirmed",
                            "cancelled",
                            "completed",
                            "no_show"
                        ],
                        "example": "confirmed"
                    },
                    "notes": {
                        "description": "Additional notes",
                        "type": "string",
                        "example": "Please arrive 10 minutes early",
                        "nullable": true
                    },
                    "special_requests": {
                        "description": "Special requests",
                        "type": "string",
                        "example": "Wheelchair accessible",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-26T07:30:00Z"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-26T07:30:00Z"
                    }
                },
                "type": "object"
            },
            "UserProfile": {
                "title": "User Profile",
                "description": "Extended user profile information",
                "properties": {
                    "id": {
                        "description": "Profile ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "user_id": {
                        "description": "User ID",
                        "type": "integer",
                        "example": 1
                    },
                    "bio": {
                        "description": "User biography",
                        "type": "string",
                        "example": "Software developer with 5 years experience",
                        "nullable": true
                    },
                    "date_of_birth": {
                        "description": "Date of birth",
                        "type": "string",
                        "format": "date",
                        "example": "1990-01-01",
                        "nullable": true
                    },
                    "gender": {
                        "description": "Gender",
                        "type": "string",
                        "enum": [
                            "male",
                            "female",
                            "other",
                            "prefer_not_to_say"
                        ],
                        "example": "male",
                        "nullable": true
                    },
                    "nationality": {
                        "description": "Nationality",
                        "type": "string",
                        "example": "American",
                        "nullable": true
                    },
                    "address": {
                        "description": "Address",
                        "type": "string",
                        "example": "123 Main St, City, State 12345",
                        "nullable": true
                    },
                    "city": {
                        "description": "City",
                        "type": "string",
                        "example": "New York",
                        "nullable": true
                    },
                    "state": {
                        "description": "State/Province",
                        "type": "string",
                        "example": "NY",
                        "nullable": true
                    },
                    "country": {
                        "description": "Country",
                        "type": "string",
                        "example": "United States",
                        "nullable": true
                    },
                    "postal_code": {
                        "description": "Postal code",
                        "type": "string",
                        "example": "10001",
                        "nullable": true
                    },
                    "phone_secondary": {
                        "description": "Secondary phone",
                        "type": "string",
                        "example": "+1234567891",
                        "nullable": true
                    },
                    "emergency_contact_name": {
                        "description": "Emergency contact name",
                        "type": "string",
                        "example": "Jane Doe",
                        "nullable": true
                    },
                    "emergency_contact_phone": {
                        "description": "Emergency contact phone",
                        "type": "string",
                        "example": "+1234567892",
                        "nullable": true
                    },
                    "emergency_contact_relationship": {
                        "description": "Emergency contact relationship",
                        "type": "string",
                        "example": "Spouse",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-26T07:30:00Z"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-26T07:30:00Z"
                    }
                },
                "type": "object"
            },
            "UserSession": {
                "title": "User Session",
                "description": "User session information",
                "properties": {
                    "id": {
                        "description": "Session ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "user_id": {
                        "description": "User ID",
                        "type": "integer",
                        "example": 1
                    },
                    "session_id": {
                        "description": "Session identifier",
                        "type": "string",
                        "example": "session_123456"
                    },
                    "ip_address": {
                        "description": "IP address",
                        "type": "string",
                        "example": "192.168.1.1"
                    },
                    "user_agent": {
                        "description": "User agent string",
                        "type": "string",
                        "example": "Mozilla/5.0..."
                    },
                    "device_type": {
                        "description": "Device type",
                        "type": "string",
                        "enum": [
                            "desktop",
                            "mobile",
                            "tablet"
                        ],
                        "example": "desktop"
                    },
                    "browser": {
                        "description": "Browser",
                        "type": "string",
                        "example": "Chrome"
                    },
                    "operating_system": {
                        "description": "Operating system",
                        "type": "string",
                        "example": "Windows 10"
                    },
                    "country": {
                        "description": "Country",
                        "type": "string",
                        "example": "United States"
                    },
                    "city": {
                        "description": "City",
                        "type": "string",
                        "example": "New York"
                    },
                    "status": {
                        "description": "Session status",
                        "type": "string",
                        "enum": [
                            "active",
                            "expired",
                            "terminated",
                            "suspended"
                        ],
                        "example": "active"
                    },
                    "login_at": {
                        "description": "Login timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-26T07:30:00Z"
                    },
                    "last_activity_at": {
                        "description": "Last activity timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-26T08:30:00Z"
                    },
                    "logout_at": {
                        "description": "Logout timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-26T09:30:00Z",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-26T07:30:00Z"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-26T07:30:00Z"
                    }
                },
                "type": "object"
            },
            "UserActivity": {
                "title": "User Activity",
                "description": "User activity log",
                "properties": {
                    "id": {
                        "description": "Activity ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "user_id": {
                        "description": "User ID",
                        "type": "integer",
                        "example": 1
                    },
                    "activity_type": {
                        "description": "Type of activity",
                        "type": "string",
                        "example": "login"
                    },
                    "activity_category": {
                        "description": "Activity category",
                        "type": "string",
                        "example": "authentication"
                    },
                    "description": {
                        "description": "Activity description",
                        "type": "string",
                        "example": "User logged in successfully"
                    },
                    "resource_type": {
                        "description": "Resource type",
                        "type": "string",
                        "example": "User",
                        "nullable": true
                    },
                    "resource_id": {
                        "description": "Resource ID",
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "ip_address": {
                        "description": "IP address",
                        "type": "string",
                        "example": "192.168.1.1"
                    },
                    "user_agent": {
                        "description": "User agent string",
                        "type": "string",
                        "example": "Mozilla/5.0..."
                    },
                    "status": {
                        "description": "Activity status",
                        "type": "string",
                        "enum": [
                            "success",
                            "failed",
                            "warning"
                        ],
                        "example": "success"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-26T07:30:00Z"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-26T07:30:00Z"
                    }
                },
                "type": "object"
            },
            "Notification": {
                "title": "Notification",
                "description": "User notification",
                "properties": {
                    "id": {
                        "description": "Notification ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "user_id": {
                        "description": "User ID",
                        "type": "integer",
                        "example": 1
                    },
                    "type": {
                        "description": "Notification type",
                        "type": "string",
                        "example": "info"
                    },
                    "category": {
                        "description": "Notification category",
                        "type": "string",
                        "example": "system"
                    },
                    "title": {
                        "description": "Notification title",
                        "type": "string",
                        "example": "Welcome to Pantheon!"
                    },
                    "message": {
                        "description": "Notification message",
                        "type": "string",
                        "example": "Thank you for joining our platform"
                    },
                    "data": {
                        "description": "Additional data",
                        "type": "object",
                        "example": {
                            "action_url": "/dashboard"
                        }
                    },
                    "read_at": {
                        "description": "Read timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-26T07:30:00Z",
                        "nullable": true
                    },
                    "sent_at": {
                        "description": "Sent timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-26T07:30:00Z",
                        "nullable": true
                    },
                    "priority": {
                        "description": "Priority level",
                        "type": "string",
                        "enum": [
                            "low",
                            "normal",
                            "high",
                            "urgent"
                        ],
                        "example": "normal"
                    },
                    "status": {
                        "description": "Notification status",
                        "type": "string",
                        "enum": [
                            "pending",
                            "sent",
                            "delivered",
                            "failed",
                            "cancelled"
                        ],
                        "example": "delivered"
                    },
                    "is_urgent": {
                        "description": "Whether notification is urgent",
                        "type": "boolean",
                        "example": false
                    },
                    "is_actionable": {
                        "description": "Whether notification has actions",
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-26T07:30:00Z"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-26T07:30:00Z"
                    }
                },
                "type": "object"
            },
            "UserPreference": {
                "title": "User Preference",
                "description": "User preference setting",
                "properties": {
                    "id": {
                        "description": "Preference ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "user_id": {
                        "description": "User ID",
                        "type": "integer",
                        "example": 1
                    },
                    "category": {
                        "description": "Preference category",
                        "type": "string",
                        "example": "notifications"
                    },
                    "key": {
                        "description": "Preference key",
                        "type": "string",
                        "example": "email_notifications"
                    },
                    "value": {
                        "description": "Preference value",
                        "type": "string",
                        "example": "true"
                    },
                    "data_type": {
                        "description": "Data type",
                        "type": "string",
                        "enum": [
                            "boolean",
                            "string",
                            "integer",
                            "float",
                            "array",
                            "object"
                        ],
                        "example": "boolean"
                    },
                    "is_public": {
                        "description": "Whether preference is public",
                        "type": "boolean",
                        "example": false
                    },
                    "description": {
                        "description": "Preference description",
                        "type": "string",
                        "example": "Receive email notifications",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-26T07:30:00Z"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-26T07:30:00Z"
                    }
                },
                "type": "object"
            },
            "ValidationErrorResponse": {
                "title": "Validation Error Response",
                "description": "Response for validation errors",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "example": "Validation failed"
                    },
                    "errors": {
                        "description": "Validation error details",
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UnauthorizedResponse": {
                "title": "Unauthorized Response",
                "description": "Response for unauthorized access",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "example": "Unauthenticated"
                    }
                },
                "type": "object"
            },
            "ForbiddenResponse": {
                "title": "Forbidden Response",
                "description": "Response for forbidden access",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "example": "Access denied"
                    }
                },
                "type": "object"
            },
            "NotFoundResponse": {
                "title": "Not Found Response",
                "description": "Response for resource not found",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "example": "Resource not found"
                    }
                },
                "type": "object"
            },
            "LockedResponse": {
                "title": "Locked Response",
                "description": "Response for locked account",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "example": "Account is temporarily locked"
                    },
                    "data": {
                        "properties": {
                            "locked_until": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2025-09-26T10:30:00Z"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "RateLimitResponse": {
                "title": "Rate Limit Response",
                "description": "Response for rate limit exceeded",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "example": "Too many requests"
                    },
                    "data": {
                        "properties": {
                            "retry_after": {
                                "type": "integer",
                                "example": 60
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Role": {
                "title": "Role",
                "description": "Role model",
                "properties": {
                    "id": {
                        "description": "Role ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "description": "Role name",
                        "type": "string",
                        "example": "admin"
                    },
                    "display_name": {
                        "description": "Role display name",
                        "type": "string",
                        "example": "Administrator"
                    },
                    "description": {
                        "description": "Role description",
                        "type": "string",
                        "example": "Full system administrator",
                        "nullable": true
                    },
                    "guard_name": {
                        "description": "Guard name",
                        "type": "string",
                        "example": "web"
                    },
                    "permissions": {
                        "description": "Role permissions",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Permission"
                        }
                    },
                    "users_count": {
                        "description": "Number of users with this role",
                        "type": "integer",
                        "example": 5,
                        "nullable": true
                    },
                    "permissions_count": {
                        "description": "Number of permissions for this role",
                        "type": "integer",
                        "example": 15,
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-26T07:30:00Z"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-26T07:30:00Z"
                    }
                },
                "type": "object"
            },
            "Permission": {
                "title": "Permission",
                "description": "Permission model",
                "properties": {
                    "id": {
                        "description": "Permission ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "description": "Permission name",
                        "type": "string",
                        "example": "view users"
                    },
                    "display_name": {
                        "description": "Permission display name",
                        "type": "string",
                        "example": "View Users"
                    },
                    "description": {
                        "description": "Permission description",
                        "type": "string",
                        "example": "Can view user information",
                        "nullable": true
                    },
                    "category": {
                        "description": "Permission category",
                        "type": "string",
                        "example": "user_management",
                        "nullable": true
                    },
                    "guard_name": {
                        "description": "Guard name",
                        "type": "string",
                        "example": "web"
                    },
                    "roles": {
                        "description": "Roles that have this permission",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Role"
                        }
                    },
                    "roles_count": {
                        "description": "Number of roles with this permission",
                        "type": "integer",
                        "example": 3,
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-26T07:30:00Z"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-26T07:30:00Z"
                    }
                },
                "type": "object"
            },
            "HealthResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Success"
                    },
                    "data": {
                        "properties": {
                            "status": {
                                "type": "string",
                                "example": "success"
                            },
                            "message": {
                                "type": "string",
                                "example": "Pantheon Template Service V1 is running!"
                            },
                            "timestamp": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "version": {
                                "type": "string",
                                "example": "1.0.0"
                            },
                            "api_version": {
                                "type": "string",
                                "example": "v1"
                            },
                            "features": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "endpoints": {
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "DetailedHealthResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Success"
                    },
                    "data": {
                        "properties": {
                            "status": {
                                "type": "string",
                                "example": "healthy"
                            },
                            "message": {
                                "type": "string",
                                "example": "All V1 systems operational"
                            },
                            "timestamp": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "version": {
                                "type": "string",
                                "example": "1.0.0"
                            },
                            "api_version": {
                                "type": "string",
                                "example": "v1"
                            },
                            "checks": {
                                "type": "object"
                            },
                            "system_info": {
                                "type": "object"
                            },
                            "recommendations": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": "object"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Login with email and password to get the authentication token",
                "name": "Sanctum",
                "in": "header",
                "bearerFormat": "Sanctum",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Admin",
            "description": "API Endpoints for Admin Management"
        },
        {
            "name": "API Logs Management",
            "description": "Superadmin-only API endpoints for managing API call logs"
        },
        {
            "name": "Authentication",
            "description": "API Endpoints for User Authentication"
        },
        {
            "name": "Bookings",
            "description": "API Endpoints for Booking Management"
        },
        {
            "name": "Enhanced Authentication",
            "description": "Enhanced API Endpoints for Multi-Guard Authentication"
        },
        {
            "name": "External API Integration",
            "description": "API Endpoints for External Warehouse Integration"
        },
        {
            "name": "Login History",
            "description": "API Endpoints for User Login History"
        },
        {
            "name": "Merchants",
            "description": "API Endpoints for Merchant Management"
        },
        {
            "name": "Module Access Management",
            "description": "API Endpoints for Managing User Module Access"
        },
        {
            "name": "Notifications",
            "description": "API Endpoints for Notification Management"
        },
        {
            "name": "Permission Management",
            "description": "API Endpoints for Permission Management with Advanced Features"
        },
        {
            "name": "Profile Management",
            "description": "API Endpoints for User Profile Management with Permission-Based Access Control"
        },
        {
            "name": "Role Management",
            "description": "API Endpoints for Role Management with Advanced Features"
        },
        {
            "name": "System",
            "description": "API Endpoints for System Status and Metrics"
        },
        {
            "name": "User Activities",
            "description": "API Endpoints for User Activity Tracking"
        },
        {
            "name": "User Management",
            "description": "API Endpoints for Managing Users (Superadmin Only)"
        },
        {
            "name": "User Preferences",
            "description": "API Endpoints for User Preference Management"
        },
        {
            "name": "User Profiles",
            "description": "API Endpoints for Extended User Profile Management"
        },
        {
            "name": "Webhooks",
            "description": "API Endpoints for Webhook Handling"
        },
        {
            "name": "Health",
            "description": "Health"
        }
    ]
}